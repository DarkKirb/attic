# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.
args @ {
  release ? true,
  rootFeatures ? [
    "attic/default"
    "attic-client/default"
    "attic-server/default"
    "attic-token/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  rustcLinkFlags ? null,
  rustcBuildFlags ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
}: let
  workspaceSrc =
    if args.workspaceSrc == null
    then ./.
    else args.workspaceSrc;
in let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
    release = builtins.fromTOML "codegen-units = 1\nlto = true\n";
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f: let
    drvs = genDrvsByProfile profilesByName ({
      profile,
      profileName,
    }:
      mkRustCrate ({inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts rustcLinkFlags rustcBuildFlags;} // (f profileName)));
  in
    {
      compileMode ? null,
      profileName ? decideProfile compileMode release,
    }: let
      drv = drvs.${profileName};
    in
      if compileMode == null
      then drv
      else drv.override {inherit compileMode;};
in {
  cargo2nixVersion = "0.11.0";
  workspace = {
    attic = rustPackages.unknown.attic."0.1.0";
    attic-client = rustPackages.unknown.attic-client."0.1.0";
    attic-server = rustPackages.unknown.attic-server."0.1.0";
    attic-token = rustPackages.unknown.attic-token."0.1.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.21.0" = overridableMkRustCrate (profileName: rec {
    name = "addr2line";
    version = "0.21.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb";
    };
    dependencies = {
      gimli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.28.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "adler";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" = overridableMkRustCrate (profileName: rec {
    name = "ahash";
    version = "0.7.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "fcb51a0695d8f838b1ee009b3fbf66bda078cd64590202a864a8f3e8c4315c47";
    };
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "solaris" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "cloudabi" || hostPlatform.parsed.kernel.name == "haiku" || hostPlatform.parsed.kernel.name == "vxworks" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi"
        then "getrandom"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.10" {inherit profileName;};
      ${
        if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none")
        then "once_cell"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.3" = overridableMkRustCrate (profileName: rec {
    name = "ahash";
    version = "0.8.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f";
    };
    features = builtins.concatLists [
      ["default"]
      ["getrandom"]
      ["runtime-rng"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.10" {inherit profileName;};
      ${
        if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none")
        then "once_cell"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.0.5" = overridableMkRustCrate (profileName: rec {
    name = "aho-corasick";
    version = "1.0.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0c378d78423fdad8089616f827526ee33c19f2fddbd5de1629152c9593ba4783";
    };
    features = builtins.concatLists [
      ["default"]
      ["perf-literal"]
      ["std"]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aliasable."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "aliasable";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "250f629c0161ad8107cf89319e990051fae62832fd343083bea452d93e2205fd";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" = overridableMkRustCrate (profileName: rec {
    name = "alloc-no-stdlib";
    version = "2.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".alloc-stdlib."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "alloc-stdlib";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece";
    };
    dependencies = {
      alloc_no_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.16" = overridableMkRustCrate (profileName: rec {
    name = "allocator-api2";
    version = "0.2.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0942ffc6dcaadf03badf6e6a2d0228460359d5e34b57ccdc720b7382dfbd5ec5";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "android-tzdata";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "android_system_properties";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311";
    };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".anstream."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "anstream";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b1f58811cfac344940f1a400b6e6231ce35171f614f26439e80f8c1465c5cc0c";
    };
    features = builtins.concatLists [
      ["auto"]
      ["default"]
      ["wincon"]
    ];
    dependencies = {
      anstyle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.2" {inherit profileName;};
      anstyle_parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.1" {inherit profileName;};
      anstyle_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.0.0" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "anstyle_wincon"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."2.1.0" {inherit profileName;};
      colorchoice = rustPackages."registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.0" {inherit profileName;};
      utf8parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.2" = overridableMkRustCrate (profileName: rec {
    name = "anstyle";
    version = "1.0.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "15c4c2c83f81532e5845a733998b6971faca23490340a418e9b72a3ec9de12ea";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "anstyle-parse";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "938874ff5980b03a87c5524b3ae5b59cf99b1d6bc836848df7bc5ada9643c333";
    };
    features = builtins.concatLists [
      ["default"]
      ["utf8"]
    ];
    dependencies = {
      utf8parse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "anstyle-query";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5ca11d4be1bab0c8bc8734a9aa7bf4ee8316d462a08c6ac5052f888fef5b494b";
    };
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "anstyle-wincon";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "58f54d10c6dfa51283a066ceab3ec1ab78d13fae00aa49243a45e4571fb79dfd";
    };
    dependencies = {
      anstyle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.2" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.75" = overridableMkRustCrate (profileName: rec {
    name = "anyhow";
    version = "1.0.75";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a4668cab20f66d8d020e1fbc0ebe47217433c1b6c8f2040faf858554e394ace6";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.7.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711";
    };
    features = builtins.concatLists [
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".async-channel."1.9.0" = overridableMkRustCrate (profileName: rec {
    name = "async-channel";
    version = "1.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35";
    };
    dependencies = {
      concurrent_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.2.0" {inherit profileName;};
      event_listener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".async-compression."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "async-compression";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d495b6dc0184693324491a5ac05f559acc97bf937ab31d7a1c33dd0016be6d2b";
    };
    features = builtins.concatLists [
      ["brotli"]
      ["deflate"]
      ["flate2"]
      ["futures-io"]
      ["gzip"]
      ["libzstd"]
      ["tokio"]
      ["xz"]
      ["xz2"]
      ["zstd"]
      ["zstd-safe"]
    ];
    dependencies = {
      brotli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".brotli."3.3.4" {inherit profileName;};
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.27" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      xz2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.7" {inherit profileName;};
      libzstd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd."0.12.4" {inherit profileName;};
      zstd_safe = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd-safe."6.0.6" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "async-stream";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cd56dd203fef61ac097dd65721a419ddccb106b2d2b70ba60a6b529f03961a51";
    };
    dependencies = {
      async_stream_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream-impl."0.3.5" {profileName = "__noProfile";};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".async-stream-impl."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "async-stream-impl";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "16e62a023e7c117e27523144c5d2459f4397fcc3cab0085af8e2224f643a0193";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" = overridableMkRustCrate (profileName: rec {
    name = "async-trait";
    version = "0.1.73";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bc00ceb34980c03614e35a3a4e218276a0a824e911d07651cd0d858a51e8c0f0";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "atoi";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f28d99ec8bfea296261ca1af174f24225171fea9664ba9003cbebee704810528";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
  });

  "unknown".attic."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "attic";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/attic");
    features = builtins.concatLists [
      ["default"]
      ["nix_store"]
      ["tokio"]
    ];
    dependencies = {
      async_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.5" {inherit profileName;};
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      cxx = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cxx."1.0.107" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      displaydoc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.4" {profileName = "__noProfile";};
      ed25519_compact = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ed25519-compact."2.0.4" {inherit profileName;};
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      nix_base32 = rustPackages."git+https://github.com/zhaofengli/nix-base32.git".nix-base32."0.1.2-alpha.0" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_with = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with."3.3.0" {inherit profileName;};
      serde_yaml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_yaml."0.9.25" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.8.0" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      wildmatch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wildmatch."2.1.1" {inherit profileName;};
      xdg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xdg."2.5.2" {inherit profileName;};
    };
    devDependencies = {
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      tokio_test = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-test."0.4.3" {inherit profileName;};
    };
    buildDependencies = {
      cxx_build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cxx-build."1.0.107" {profileName = "__noProfile";};
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.27" {profileName = "__noProfile";};
      tempfile = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.8.0" {profileName = "__noProfile";};
    };
  });

  "unknown".attic-client."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "attic-client";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/client");
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.75" {inherit profileName;};
      async_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-channel."1.9.0" {inherit profileName;};
      async_compression = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-compression."0.4.2" {inherit profileName;};
      async_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.5" {inherit profileName;};
      attic = rustPackages."unknown".attic."0.1.0" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.4.2" {inherit profileName;};
      clap_complete = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_complete."4.4.1" {inherit profileName;};
      const_format = rustPackages."registry+https://github.com/rust-lang/crates.io-index".const_format."0.2.31" {inherit profileName;};
      dialoguer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dialoguer."0.10.4" {inherit profileName;};
      displaydoc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.4" {profileName = "__noProfile";};
      enum_as_inner = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.6.0" {profileName = "__noProfile";};
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" {inherit profileName;};
      indicatif = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indicatif."0.17.6" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      notify = rustPackages."registry+https://github.com/rust-lang/crates.io-index".notify."6.1.1" {inherit profileName;};
      pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.3" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      reqwest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.20" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.7.7" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
      xdg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xdg."2.5.2" {inherit profileName;};
    };
  });

  "unknown".attic-server."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "attic-server";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/server");
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.75" {inherit profileName;};
      async_compression = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-compression."0.4.2" {inherit profileName;};
      async_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.5" {inherit profileName;};
      async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" {profileName = "__noProfile";};
      attic = rustPackages."unknown".attic."0.1.0" {inherit profileName;};
      attic_token = rustPackages."unknown".attic-token."0.1.0" {inherit profileName;};
      aws_config = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-config."0.56.1" {inherit profileName;};
      aws_sdk_s3 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sdk-s3."0.30.0" {inherit profileName;};
      axum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum."0.6.20" {inherit profileName;};
      axum_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".axum-macros."0.3.8" {profileName = "__noProfile";};
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.4.2" {inherit profileName;};
      console_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console-subscriber."0.1.10" {inherit profileName;};
      derivative = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" {profileName = "__noProfile";};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      displaydoc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.4" {profileName = "__noProfile";};
      enum_as_inner = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.6.0" {profileName = "__noProfile";};
      fastcdc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastcdc."3.1.0" {inherit profileName;};
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" {inherit profileName;};
      humantime_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime-serde."1.1.1" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      maybe_owned = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-owned."0.3.4" {inherit profileName;};
      pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.3" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.15" {inherit profileName;};
      sea_orm = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-orm."0.12.2" {inherit profileName;};
      sea_orm_migration = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-orm-migration."0.12.2" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      serde_with = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with."3.3.0" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.8" {inherit profileName;};
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.7.7" {inherit profileName;};
      tower_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-http."0.4.4" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-error."0.2.0" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
      xdg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xdg."2.5.2" {inherit profileName;};
    };
    devDependencies = {
      tokio_test = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-test."0.4.3" {inherit profileName;};
    };
  });

  "unknown".attic-token."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "attic-token";
    version = "0.1.0";
    registry = "unknown";
    src = fetchCrateLocal (workspaceSrc + "/token");
    dependencies = {
      attic = rustPackages."unknown".attic."0.1.0" {inherit profileName;};
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      displaydoc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.4" {profileName = "__noProfile";};
      jwt_simple = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jwt-simple."0.11.6" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_with = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with."3.3.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-config."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-config";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "fc6b3804dca60326e07205179847f17a4fce45af3a1106939177ad41ac08a6de";
    };
    features = builtins.concatLists [
      ["client-hyper"]
      ["credentials-sso"]
      ["default"]
      ["rt-tokio"]
      ["rustls"]
    ];
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.56.1" {inherit profileName;};
      aws_sdk_sso = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sso."0.30.0" {inherit profileName;};
      aws_sdk_sts = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sts."0.30.0" {inherit profileName;};
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_http_tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.56.1" {inherit profileName;};
      aws_smithy_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      aws_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-credential-types";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "70a66ac8ef5fa9cf01c2d999f39d16812e90ec1467bd382cbbb74ba23ea86201";
    };
    dependencies = {
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-http."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-http";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3e626370f9ba806ae4c439e49675fd871f5767b093075cdf4fef16cac42ba900";
    };
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      aws_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-runtime."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-runtime";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "07ac5cf0ff19c1bca0cea7932e11b239d1025a45696a4f44f72ea86e2b8bdd07";
    };
    features = builtins.concatLists [
      ["event-stream"]
    ];
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.56.1" {inherit profileName;};
      aws_sigv4 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sigv4."0.56.1" {inherit profileName;};
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_eventstream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-eventstream."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_runtime_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime-api."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      aws_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" {inherit profileName;};
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-sdk-s3."0.30.0" = overridableMkRustCrate (profileName: rec {
    name = "aws-sdk-s3";
    version = "0.30.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a531d010f9f556bf65eb3bcd8d24f1937600ab6940fede4d454cd9b1f031fb34";
    };
    features = builtins.concatLists [
      ["default"]
      ["rt-tokio"]
      ["rustls"]
    ];
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.56.1" {inherit profileName;};
      aws_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-runtime."0.56.1" {inherit profileName;};
      aws_sigv4 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-sigv4."0.56.1" {inherit profileName;};
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_checksums = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-checksums."0.56.1" {inherit profileName;};
      aws_smithy_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" {inherit profileName;};
      aws_smithy_eventstream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-eventstream."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.56.1" {inherit profileName;};
      aws_smithy_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime."0.56.1" {inherit profileName;};
      aws_smithy_runtime_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime-api."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      aws_smithy_xml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-xml."0.56.1" {inherit profileName;};
      aws_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sso."0.30.0" = overridableMkRustCrate (profileName: rec {
    name = "aws-sdk-sso";
    version = "0.30.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "903f888ff190e64f6f5c83fb0f8d54f9c20481f1dc26359bb8896f5d99908949";
    };
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.56.1" {inherit profileName;};
      aws_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-runtime."0.56.1" {inherit profileName;};
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.56.1" {inherit profileName;};
      aws_smithy_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime."0.56.1" {inherit profileName;};
      aws_smithy_runtime_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime-api."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      aws_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-sdk-sts."0.30.0" = overridableMkRustCrate (profileName: rec {
    name = "aws-sdk-sts";
    version = "0.30.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a47ad6bf01afc00423d781d464220bf69fb6a674ad6629cbbcb06d88cdc2be82";
    };
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-http."0.56.1" {inherit profileName;};
      aws_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-runtime."0.56.1" {inherit profileName;};
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.56.1" {inherit profileName;};
      aws_smithy_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-query."0.56.1" {inherit profileName;};
      aws_smithy_runtime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime."0.56.1" {inherit profileName;};
      aws_smithy_runtime_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime-api."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      aws_smithy_xml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-xml."0.56.1" {inherit profileName;};
      aws_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-sigv4."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-sigv4";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b7b28f4910bb956b7ab320b62e98096402354eca976c587d1eeccd523d9bac03";
    };
    features = builtins.concatLists [
      ["aws-smithy-eventstream"]
      ["bytes"]
      ["default"]
      ["form_urlencoded"]
      ["http"]
      ["percent-encoding"]
      ["sign-eventstream"]
      ["sign-http"]
    ];
    dependencies = {
      aws_smithy_eventstream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-eventstream."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      form_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.0" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      hmac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-async";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2cdb73f85528b9d19c23a496034ac53703955a59323d581c06aa27b4e4e247af";
    };
    features = builtins.concatLists [
      ["rt-tokio"]
    ];
    dependencies = {
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-checksums."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-checksums";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "afb15946af1b8d3beeff53ad991d9bff68ac22426b6d40372b958a75fa61eaed";
    };
    dependencies = {
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      crc32c = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32c."0.6.4" {inherit profileName;};
      crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      md5 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.5" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.5" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-client";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c27b2756264c82f830a91cb4d2d485b2d19ad5bea476d9a966e03d27f27ba59a";
    };
    features = builtins.concatLists [
      ["client-hyper"]
      ["rt-tokio"]
      ["rustls"]
    ];
    dependencies = {
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_http_tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      hyper_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.24.1" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.21.7" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-eventstream."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-eventstream";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "850233feab37b591b7377fd52063aa37af615687f5896807abe7f49bd4e1d25b";
    };
    dependencies = {
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-http";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "54cdcf365d8eee60686885f750a34c190e513677db58bbc466c44c588abf4199";
    };
    features = builtins.concatLists [
      ["aws-smithy-eventstream"]
      ["event-stream"]
      ["rt-tokio"]
    ];
    dependencies = {
      aws_smithy_eventstream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-eventstream."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      bytes_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes-utils."0.1.3" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      pin_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.8" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http-tower."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-http-tower";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "822de399d0ce62829a69dfa8c5cd08efdbe61a7426b953e2268f8b8b52a607bd";
    };
    dependencies = {
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-json."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-json";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4fb1e7ab8fa7ad10c193af7ae56d2420989e9f4758bf03601a342573333ea34f";
    };
    dependencies = {
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-query."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-query";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "28556a3902091c1f768a34f6c998028921bdab8d47d92586f363f14a4a32d047";
    };
    dependencies = {
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      urlencoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-runtime";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "745e096b3553e7e0f40622aa04971ce52765af82bebdeeac53aa6fc82fe801e6";
    };
    features = builtins.concatLists [
      ["client"]
    ];
    dependencies = {
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_runtime_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime-api."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      pin_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-runtime-api."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-runtime-api";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "93d0ae0c9cfd57944e9711ea610b48a963fb174a53aabacc08c5794a594b1d02";
    };
    features = builtins.concatLists [
      ["client"]
      ["default"]
    ];
    dependencies = {
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-types";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d90dbc8da2f6be461fa3c1906b20af8f79d14968fe47f2b7d29d086f62a51728";
    };
    dependencies = {
      base64_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64-simd."0.8.0" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.15" {inherit profileName;};
      ${
        if false
        then "serde"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-smithy-xml."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-smithy-xml";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e01d2dedcdd8023043716cfeeb3c6c59f2d447fce365d8e194838891794b23b6";
    };
    dependencies = {
      xmlparser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xmlparser."0.13.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".aws-types."0.56.1" = overridableMkRustCrate (profileName: rec {
    name = "aws-types";
    version = "0.56.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "85aa0451bf8af1bf22a4f028d5d28054507a14be43cb8ac0597a8471fba9edfe";
    };
    dependencies = {
      aws_credential_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-credential-types."0.56.1" {inherit profileName;};
      aws_smithy_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-async."0.56.1" {inherit profileName;};
      aws_smithy_client = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-client."0.56.1" {inherit profileName;};
      aws_smithy_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-http."0.56.1" {inherit profileName;};
      aws_smithy_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aws-smithy-types."0.56.1" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".axum."0.6.20" = overridableMkRustCrate (profileName: rec {
    name = "axum";
    version = "0.6.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3b829e4e32b91e643de6eafe82b1d90675f5874230191a4ffbc1b336dec4d6bf";
    };
    features = builtins.concatLists [
      ["default"]
      ["form"]
      ["http1"]
      ["json"]
      ["matched-path"]
      ["original-uri"]
      ["query"]
      ["tokio"]
      ["tower-log"]
    ];
    dependencies = {
      async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" {profileName = "__noProfile";};
      axum_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum-core."0.3.4" {inherit profileName;};
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      matchit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchit."0.7.2" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      serde_path_to_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.14" {inherit profileName;};
      serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" {inherit profileName;};
      sync_wrapper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" {inherit profileName;};
      tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
    };
    buildDependencies = {
      rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.14" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".axum-core."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "axum-core";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c";
    };
    dependencies = {
      async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" {profileName = "__noProfile";};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" {inherit profileName;};
      tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
    };
    buildDependencies = {
      rustversion = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.14" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".axum-macros."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "axum-macros";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cdca6a10ecad987bda04e95606ef85a5417dcaac1a78455242d72e031e2b6b62";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.69" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.69";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      ${
        if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
        then "addr2line"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.21.0" {inherit profileName;};
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ${
        if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
        then "miniz_oxide"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.1" {inherit profileName;};
      ${
        if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp"))
        then "object"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.32.1" {inherit profileName;};
      rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.23" {inherit profileName;};
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".base16ct."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "base16ct";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" = overridableMkRustCrate (profileName: rec {
    name = "base64";
    version = "0.13.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" = overridableMkRustCrate (profileName: rec {
    name = "base64";
    version = "0.21.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "414dcefbc63d77c526a76b3afcf6fbb9b5e2791c19c3aa2297733208750c6e53";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".base64-simd."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "base64-simd";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "339abbe78e73178762e23bea9dfd08e697eb3f3301cd4be981c0f78ba5859195";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["detect"]
      ["std"]
    ];
    dependencies = {
      outref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".outref."0.5.1" {inherit profileName;};
      vsimd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vsimd."0.8.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "base64ct";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "bigdecimal";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a6773ddc0eafc0e509fb60e48dff7f450f8e674a0686ae8605e8d9901bd5eefa";
    };
    dependencies = {
      num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.4" {inherit profileName;};
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".binstring."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "binstring";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7e0d60973d9320722cb1206f412740e162a33b8547ea8d6be75d7cff237c7a85";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.0" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "2.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b4682ae6287fcf752ecaabbfcc7b6f9b72aa33933dc23a554d853aea8eea8635";
    };
    features = builtins.concatLists [
      ["serde"]
      ["std"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "bitvec";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
    dependencies = {
      funty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".funty."2.0.0" {inherit profileName;};
      radium = rustPackages."registry+https://github.com/rust-lang/crates.io-index".radium."0.7.0" {inherit profileName;};
      tap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" {inherit profileName;};
      wyz = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wyz."0.5.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" = overridableMkRustCrate (profileName: rec {
    name = "block-buffer";
    version = "0.10.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71";
    };
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".borsh."0.10.3" = overridableMkRustCrate (profileName: rec {
    name = "borsh";
    version = "0.10.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4114279215a005bc675e386011e594e1d9b800918cea18fcadadcce864a2046b";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      borsh_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".borsh-derive."0.10.3" {profileName = "__noProfile";};
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.13.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".borsh-derive."0.10.3" = overridableMkRustCrate (profileName: rec {
    name = "borsh-derive";
    version = "0.10.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0754613691538d51f329cce9af41d7b7ca150bc973056f1156611489475f54f7";
    };
    dependencies = {
      borsh_derive_internal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".borsh-derive-internal."0.10.3" {inherit profileName;};
      borsh_schema_derive_internal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".borsh-schema-derive-internal."0.10.3" {inherit profileName;};
      proc_macro_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.5" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".borsh-derive-internal."0.10.3" = overridableMkRustCrate (profileName: rec {
    name = "borsh-derive-internal";
    version = "0.10.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "afb438156919598d2c7bad7e1c0adf3d26ed3840dbc010db1a882a65583ca2fb";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".borsh-schema-derive-internal."0.10.3" = overridableMkRustCrate (profileName: rec {
    name = "borsh-schema-derive-internal";
    version = "0.10.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "634205cc43f74a1b9046ef87c4540ebda95696ec0f315024860cad7c5b0f5ccd";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".brotli."3.3.4" = overridableMkRustCrate (profileName: rec {
    name = "brotli";
    version = "3.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a1a0b1dbcc8ae29329621f8d4f0d835787c1c38bb1401979b49d13b0b305ff68";
    };
    features = builtins.concatLists [
      ["alloc-stdlib"]
      ["std"]
    ];
    dependencies = {
      alloc_no_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" {inherit profileName;};
      alloc_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-stdlib."0.2.2" {inherit profileName;};
      brotli_decompressor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".brotli-decompressor."2.3.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".brotli-decompressor."2.3.4" = overridableMkRustCrate (profileName: rec {
    name = "brotli-decompressor";
    version = "2.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4b6561fd3f895a11e8f72af2cb7d22e08366bebc2b6b57f7744c4bda27034744";
    };
    features = builtins.concatLists [
      ["alloc-stdlib"]
      ["std"]
    ];
    dependencies = {
      alloc_no_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-no-stdlib."2.0.4" {inherit profileName;};
      alloc_stdlib = rustPackages."registry+https://github.com/rust-lang/crates.io-index".alloc-stdlib."0.2.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.13.0" = overridableMkRustCrate (profileName: rec {
    name = "bumpalo";
    version = "3.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a3e2c3daef883ecc1b5d58c15adae93470a91d425f3532ba1695849656af3fc1";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".bytecheck."0.6.11" = overridableMkRustCrate (profileName: rec {
    name = "bytecheck";
    version = "0.6.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8b6372023ac861f6e6dc89c8344a8f398fb42aaba2b5dbc649ca0c0e9dbcb627";
    };
    features = builtins.concatLists [
      ["simdutf8"]
      ["std"]
    ];
    dependencies = {
      bytecheck_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecheck_derive."0.6.11" {profileName = "__noProfile";};
      ptr_meta = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ptr_meta."0.1.4" {inherit profileName;};
      simdutf8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".simdutf8."0.1.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".bytecheck_derive."0.6.11" = overridableMkRustCrate (profileName: rec {
    name = "bytecheck_derive";
    version = "0.6.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a7ec4c6f261935ad534c0c22dbef2201b45918860eb1c574b972bd213a76af61";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" = overridableMkRustCrate (profileName: rec {
    name = "bytes";
    version = "1.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".bytes-utils."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "bytes-utils";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e47d3a8076e283f3acd27400535992edb3ba4b5bb72f8891ad8fbe7932a7d4b9";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.0.83";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0";
    };
    features = builtins.concatLists [
      ["jobserver"]
      ["parallel"]
    ];
    dependencies = {
      jobserver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.26" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.30";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "defd4e7873dbddba6c7c91e199c7fcb946abc4a6a4ac3195400bcfb01b5de877";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["android-tzdata"]
      ["clock"]
      ["default"]
      ["iana-time-zone"]
      ["js-sys"]
      ["oldtime"]
      ["serde"]
      ["std"]
      ["wasm-bindgen"]
      ["wasmbind"]
      ["winapi"]
      ["windows-targets"]
    ];
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "android"
        then "android_tzdata"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "iana_time_zone"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.57" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi")
        then "js_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "wasi")
        then "wasm_bindgen"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_targets"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".clap."4.4.2" = overridableMkRustCrate (profileName: rec {
    name = "clap";
    version = "4.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6a13b88d2c62ff462f88e4a121f17a82c1af05693a2f192b5c38d14de73c19f6";
    };
    features = builtins.concatLists [
      ["color"]
      ["default"]
      ["derive"]
      ["env"]
      ["error-context"]
      ["help"]
      ["std"]
      ["suggestions"]
      ["usage"]
    ];
    dependencies = {
      clap_builder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.4.2" {inherit profileName;};
      clap_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.4.2" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.4.2" = overridableMkRustCrate (profileName: rec {
    name = "clap_builder";
    version = "4.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2bb9faaa7c2ef94b2743a21f5a29e6f0010dff4caa69ac8e9d6cf8b6fa74da08";
    };
    features = builtins.concatLists [
      ["color"]
      ["env"]
      ["error-context"]
      ["help"]
      ["std"]
      ["suggestions"]
      ["usage"]
    ];
    dependencies = {
      anstream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstream."0.5.0" {inherit profileName;};
      anstyle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.2" {inherit profileName;};
      clap_lex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.5.1" {inherit profileName;};
      strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.10.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".clap_complete."4.4.1" = overridableMkRustCrate (profileName: rec {
    name = "clap_complete";
    version = "4.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4110a1e6af615a9e6d0a36f805d5c99099f8bab9b8042f5bc1fa220a4a89e36f";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.4.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.4.2" = overridableMkRustCrate (profileName: rec {
    name = "clap_derive";
    version = "4.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0862016ff20d69b84ef8247369fabf5c008a7417002411897d40ee1f4532b873";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "clap_lex";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cd7cc57abe963c6d3b9d8be5b06ba7c8957a930305ca90304f24ef040aa6f961";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".coarsetime."0.1.23" = overridableMkRustCrate (profileName: rec {
    name = "coarsetime";
    version = "0.1.23";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a90d114103adbc625300f346d4d09dfb4ab1c4a8df6868435dd903392ecf4354";
    };
    dependencies = {
      ${
        if !(hostPlatform.parsed.kernel.name == "wasi")
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "wasi"
        then "wasi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" {inherit profileName;};
      ${
        if (hostPlatform.parsed.cpu.name == "wasm32" || hostPlatform.parsed.cpu.name == "wasm64") && hostPlatform.parsed.kernel.name == "unknown"
        then "wasm_bindgen"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.11.1" = overridableMkRustCrate (profileName: rec {
    name = "codespan-reporting";
    version = "0.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e";
    };
    dependencies = {
      termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.2.0" {inherit profileName;};
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "colorchoice";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".concurrent-queue."2.2.0" = overridableMkRustCrate (profileName: rec {
    name = "concurrent-queue";
    version = "2.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "62ec6771ecfa0762d24683ee5a32ad78487a3d3afdc0fb8cae19d2c5deb50b7c";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".console."0.15.7" = overridableMkRustCrate (profileName: rec {
    name = "console";
    version = "0.15.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c926e00cc70edefdc64d3a5ff31cc65bb97a3460097762bd23afb4d8145fccf8";
    };
    features = builtins.concatLists [
      ["ansi-parsing"]
      ["default"]
      ["unicode-width"]
    ];
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "encode_unicode"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.10" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.45.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".console-api."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "console-api";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c2895653b4d9f1538a83970077cb01dfc77a4810524e51a110944688e916b18e";
    };
    features = builtins.concatLists [
      ["transport"]
    ];
    dependencies = {
      prost = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.11.9" {inherit profileName;};
      prost_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-types."0.11.9" {inherit profileName;};
      tonic = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tonic."0.9.2" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".console-subscriber."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "console-subscriber";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d4cf42660ac07fcebed809cfe561dd8730bcd35b075215e6479c516bcd0d11cb";
    };
    features = builtins.concatLists [
      ["default"]
      ["env-filter"]
    ];
    dependencies = {
      console_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console-api."0.5.0" {inherit profileName;};
      crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.8" {inherit profileName;};
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.16" {inherit profileName;};
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      hdrhistogram = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hdrhistogram."7.5.2" {inherit profileName;};
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" {inherit profileName;};
      prost_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-types."0.11.9" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
      tonic = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tonic."0.9.2" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.5" = overridableMkRustCrate (profileName: rec {
    name = "const-oid";
    version = "0.9.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "28c122c3980598d243d63d9a704629a2d748d101f278052ff068be5a4423ab6f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".const_format."0.2.31" = overridableMkRustCrate (profileName: rec {
    name = "const_format";
    version = "0.2.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c990efc7a285731f9a4378d81aff2f0e85a2c8781a05ef0f8baa8dac54d0ff48";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      const_format_proc_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".const_format_proc_macros."0.2.31" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".const_format_proc_macros."0.2.31" = overridableMkRustCrate (profileName: rec {
    name = "const_format_proc_macros";
    version = "0.2.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e026b6ce194a874cb9cf32cd5772d1ef9767cc8fcb5765948d74f37a9d8b2bf6";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation";
    version = "0.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146";
    };
    dependencies = {
      core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.4" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.4" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.8.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.9" = overridableMkRustCrate (profileName: rec {
    name = "cpufeatures";
    version = "0.2.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a17b76ff3a4162b0b27f354a0c87015ddad39d35f9c0c36607a3bdd175dde1f1";
    };
    dependencies = {
      ${
        if hostPlatform.config == "aarch64-linux-android" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.vendor.name == "apple"
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crc."3.0.1" = overridableMkRustCrate (profileName: rec {
    name = "crc";
    version = "3.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "86ec7a15cbe22e59248fc7eadb1907dab5ba09372595da4d73dd805ed4417dfe";
    };
    dependencies = {
      crc_catalog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc-catalog."2.2.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crc-catalog."2.2.0" = overridableMkRustCrate (profileName: rec {
    name = "crc-catalog";
    version = "2.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9cace84e55f07e7301bae1c519df89cdad8cc3cd868413d3fdbdeca9ff3db484";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crc32c."0.6.4" = overridableMkRustCrate (profileName: rec {
    name = "crc32c";
    version = "0.6.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d8f48d60e5b4d2c53d5c2b1d8a58c849a70ae5e5509b08a48d047e3b65714a74";
    };
    buildDependencies = {
      rustc_version = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "crc32fast";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.8" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-channel";
    version = "0.5.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a33c2bf77f2df06183c3aa30d1e96c0695a313d4f9c453cc3762a6db39f99200";
    };
    features = builtins.concatLists [
      ["crossbeam-utils"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-queue";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d1cfb3ea8a53f37c40dea2c7bedcbd88bdfae54f5e2175d6ecaff1c988353add";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.16" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.8.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crypto-bigint."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "crypto-bigint";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "740fe28e594155f10cfc383984cbefd529d7396050557148f79cb0f621204124";
    };
    features = builtins.concatLists [
      ["generic-array"]
      ["rand_core"]
      ["zeroize"]
    ];
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "crypto-common";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;};
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.16.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ct-codecs."1.1.1" = overridableMkRustCrate (profileName: rec {
    name = "ct-codecs";
    version = "1.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f3b7eb4404b8195a9abb6356f4ac07d8ba267045c8d6d220ac4dc992e6cc75df";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".cxx."1.0.107" = overridableMkRustCrate (profileName: rec {
    name = "cxx";
    version = "1.0.107";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bbe98ba1789d56fb3db3bee5e032774d4f421b685de7ba703643584ba24effbe";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      cxxbridge_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cxxbridge-macro."1.0.107" {profileName = "__noProfile";};
      link_cplusplus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".link-cplusplus."1.0.9" {inherit profileName;};
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
      cxxbridge_flags = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cxxbridge-flags."1.0.107" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cxx-build."1.0.107" = overridableMkRustCrate (profileName: rec {
    name = "cxx-build";
    version = "1.0.107";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c4ce20f6b8433da4841b1dadfb9468709868022d829d5ca1f2ffbda928455ea3";
    };
    dependencies = {
      cc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {inherit profileName;};
      codespan_reporting = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.11.1" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      scratch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scratch."1.0.7" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".cxxbridge-flags."1.0.107" = overridableMkRustCrate (profileName: rec {
    name = "cxxbridge-flags";
    version = "1.0.107";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "20888d9e1d2298e2ff473cee30efe7d5036e437857ab68bbfea84c74dba91da2";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".cxxbridge-macro."1.0.107" = overridableMkRustCrate (profileName: rec {
    name = "cxxbridge-macro";
    version = "1.0.107";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2fa16a70dd58129e4dfffdff535fb1bce66673f7bbeec4a5a1765a504e1ccd84";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".darling."0.20.3" = overridableMkRustCrate (profileName: rec {
    name = "darling";
    version = "0.20.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0209d94da627ab5605dcccf08bb18afa5009cfbef48d8a8b7d7bdbc79be25c5e";
    };
    features = builtins.concatLists [
      ["default"]
      ["suggestions"]
    ];
    dependencies = {
      darling_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.20.3" {inherit profileName;};
      darling_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.20.3" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".darling_core."0.20.3" = overridableMkRustCrate (profileName: rec {
    name = "darling_core";
    version = "0.20.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "177e3443818124b357d8e76f53be906d60937f0d3a90773a664fa63fa253e621";
    };
    features = builtins.concatLists [
      ["strsim"]
      ["suggestions"]
    ];
    dependencies = {
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" {inherit profileName;};
      ident_case = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.10.0" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.20.3" = overridableMkRustCrate (profileName: rec {
    name = "darling_macro";
    version = "0.20.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "836a9bbc7ad63342d6d6e7b815ccab164bc77a2d95d84bc3117a8c0d5c98e2d5";
    };
    dependencies = {
      darling_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.20.3" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".der."0.6.1" = overridableMkRustCrate (profileName: rec {
    name = "der";
    version = "0.6.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f1a467a65c5e759bce6e65eaf91cc29f466cdc57cb65777bd646872a8a1fd4de";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["const-oid"]
      ["oid"]
      ["pem"]
      ["pem-rfc7468"]
      ["std"]
      ["zeroize"]
    ];
    dependencies = {
      const_oid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.5" {inherit profileName;};
      pem_rfc7468 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.6.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".der."0.7.8" = overridableMkRustCrate (profileName: rec {
    name = "der";
    version = "0.7.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "fffa369a668c8af7dbf8b5e56c9f744fbd399949ed171606040001947de40b1c";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["oid"]
      ["pem"]
      ["std"]
      ["zeroize"]
    ];
    dependencies = {
      const_oid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.5" {inherit profileName;};
      pem_rfc7468 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.7.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "deranged";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f2696e8a945f658fd14dc3b87242e6b80cd0f36ff04ea560fa39082368847946";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["serde"]
      ["std"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" = overridableMkRustCrate (profileName: rec {
    name = "derivative";
    version = "2.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "fcc3dd5e9e9c0b295d6e1e4d811fb6f157d5ffd784b8d202fc62eac8035a770b";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".dialoguer."0.10.4" = overridableMkRustCrate (profileName: rec {
    name = "dialoguer";
    version = "0.10.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "59c6f2989294b9a498d3ad5491a79c6deb604617378e1cdc4bfc1c1361fe2f87";
    };
    features = builtins.concatLists [
      ["default"]
      ["editor"]
      ["password"]
      ["tempfile"]
      ["zeroize"]
    ];
    dependencies = {
      console = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.15.7" {inherit profileName;};
      shell_words = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-words."1.1.0" {inherit profileName;};
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.8.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" = overridableMkRustCrate (profileName: rec {
    name = "digest";
    version = "0.10.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["block-buffer"]
      ["const-oid"]
      ["core-api"]
      ["default"]
      ["mac"]
      ["oid"]
      ["std"]
      ["subtle"]
    ];
    dependencies = {
      block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" {inherit profileName;};
      const_oid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.5" {inherit profileName;};
      crypto_common = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".displaydoc."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "displaydoc";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "487585f4d0c6655fe74905e2504d8ad6908e4db67f744eb140876906c2f3175d";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" = overridableMkRustCrate (profileName: rec {
    name = "dotenvy";
    version = "0.15.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ecdsa."0.16.8" = overridableMkRustCrate (profileName: rec {
    name = "ecdsa";
    version = "0.16.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a4b1e0c257a9e9f25f90ff76d7a68360ed497ee519c8e428d1825ef0000799d4";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["arithmetic"]
      ["der"]
      ["digest"]
      ["hazmat"]
      ["pem"]
      ["pkcs8"]
      ["rfc6979"]
      ["signing"]
      ["spki"]
      ["std"]
      ["verifying"]
    ];
    dependencies = {
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.8" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      elliptic_curve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elliptic-curve."0.13.5" {inherit profileName;};
      rfc6979 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rfc6979."0.4.0" {inherit profileName;};
      signature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signature."2.1.0" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ed25519-compact."2.0.4" = overridableMkRustCrate (profileName: rec {
    name = "ed25519-compact";
    version = "2.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6a3d382e8464107391c8706b4c14b087808ecb909f6c15c34114bc42e53a9e4c";
    };
    features = builtins.concatLists [
      ["ct-codecs"]
      ["default"]
      ["getrandom"]
      ["pem"]
      ["random"]
      ["std"]
      ["x25519"]
    ];
    dependencies = {
      ct_codecs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ct-codecs."1.1.1" {inherit profileName;};
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07";
    };
    features = builtins.concatLists [
      ["default"]
      ["serde"]
      ["use_std"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".elliptic-curve."0.13.5" = overridableMkRustCrate (profileName: rec {
    name = "elliptic-curve";
    version = "0.13.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "968405c8fdc9b3bf4df0a6638858cc0b52462836ab6b1c87377785dd09cf1c0b";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["arithmetic"]
      ["digest"]
      ["ecdh"]
      ["ff"]
      ["group"]
      ["hazmat"]
      ["pem"]
      ["pkcs8"]
      ["sec1"]
      ["std"]
    ];
    dependencies = {
      base16ct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base16ct."0.2.0" {inherit profileName;};
      crypto_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-bigint."0.5.3" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.13.0" {inherit profileName;};
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;};
      group = rustPackages."registry+https://github.com/rust-lang/crates.io-index".group."0.13.0" {inherit profileName;};
      hkdf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.3" {inherit profileName;};
      pem_rfc7468 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.7.0" {inherit profileName;};
      pkcs8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
      sec1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sec1."0.7.3" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" = overridableMkRustCrate (profileName: rec {
    name = "encode_unicode";
    version = "0.3.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.33" = overridableMkRustCrate (profileName: rec {
    name = "encoding_rs";
    version = "0.8.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "enum-as-inner";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5ffccbb6966c05b32ef8fbac435df276c4ae4d3dc55a8cd0eb9745e6c12f546a";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "equivalent";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".errno."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "errno";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "136526188508e25c6fef639d7927dfb3e0e3084488bf202267829cf7fc23dbdd";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "dragonfly"
        then "errno_dragonfly"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".errno-dragonfly."0.1.2" {inherit profileName;};
      ${
        if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "hermit" || hostPlatform.parsed.kernel.name == "wasi"
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".errno-dragonfly."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "errno-dragonfly";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf";
    };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".etcetera."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "etcetera";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "136d1b5283a1ab77bd9257427ffd09d8667ced0570b6f938942bc7568ed5b943";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.5" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" = overridableMkRustCrate (profileName: rec {
    name = "event-listener";
    version = "2.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fastcdc."3.1.0" = overridableMkRustCrate (profileName: rec {
    name = "fastcdc";
    version = "3.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a71061d097bfa9a5a4d2efdec57990d9a88745020b365191d37e48541a1628f2";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "fastrand";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6999dc1837253364c2ebb0704ba97994bd874e8f195d665c50b7548f6ea92764";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".ff."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "ff";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ded41244b729663b1e574f1b4fb731469f69f79c17667b5d776b16cda0479449";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
    dependencies = {
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.22" = overridableMkRustCrate (profileName: rec {
    name = "filetime";
    version = "0.2.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d4029edd3e734da6fe05b6cd7bd2960760a616bd2ddd0d59a0124746d6272af0";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "redox"
        then "syscall"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.3.5" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".finl_unicode."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "finl_unicode";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8fcfdc7a0362c9f4444381a9e697c79d435fe65b52a37466fc2c1184cee9edc6";
    };
    features = builtins.concatLists [
      ["categories"]
      ["default"]
      ["grapheme_clusters"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.27" = overridableMkRustCrate (profileName: rec {
    name = "flate2";
    version = "1.0.27";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c6c98ee8095e9d1dcbf2fcc6d95acccb90d1c81db1e44725c6a984b1dbdfb010";
    };
    features = builtins.concatLists [
      ["any_impl"]
      ["default"]
      ["miniz_oxide"]
      ["rust_backend"]
    ];
    dependencies = {
      crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" {inherit profileName;};
      miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".flume."0.10.14" = overridableMkRustCrate (profileName: rec {
    name = "flume";
    version = "0.10.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1657b4441c3403d9f7b3409e47575237dac27b1b5726df654a6ecbf92f0f7577";
    };
    features = builtins.concatLists [
      ["async"]
      ["futures-core"]
      ["futures-sink"]
      ["pin-project"]
    ];
    dependencies = {
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" {inherit profileName;};
      pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.3" {inherit profileName;};
      spin1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "fnv";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "form_urlencoded";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".funty."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "funty";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "23342abe12aba583913b2e62f22225ff9c950774065e4bfb61a19cd9770fec40";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["async-await"]
      ["default"]
      ["executor"]
      ["futures-executor"]
      ["std"]
    ];
    dependencies = {
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.28" {inherit profileName;};
      futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" {inherit profileName;};
      futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" {inherit profileName;};
      futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-channel";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "955518d47e09b25bbebc7a18df10b81f0c766eaf4c4f1cccef2fca5f2a4fb5f2";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["futures-sink"]
      ["sink"]
      ["std"]
    ];
    dependencies = {
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-core";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4bca583b7e26f571124fe5b7561d49cb2868d79116cfa0eefce955557c6fee8c";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-executor";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ccecee823288125bd88b4d7f565c9e58e41858e47ab72e8ea2d64e93624386e0";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-intrusive."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "futures-intrusive";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1d930c203dd0b6ff06e0201a4a2fe9149b43c684fd4420555b26d21b1a02956f";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["parking_lot"]
      ["std"]
    ];
    dependencies = {
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.10" {inherit profileName;};
      parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-io";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4fff74096e71ed47f8e023204cfd0aa1289cd54ae5430a9523be060cdb849964";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-macro";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "89ca545a94061b6365f2c7355b4b32bd20df3ff95f02da9329b34ccc3bd6ee72";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-sink";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f43be4fe21a13b9781a69afa4985b0f6ee0e1afab2c6f454a8cf30e2b2237b6e";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-task";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "76d3d132be6c0e6aa1534069c705a74a5997a356c0dc2f86a47765e5617c5b65";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "futures-util";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "26b01e40b772d54cf6c6d721c1d1abd0647a0106a12ecaa1c186273392a69533";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["async-await"]
      ["async-await-macro"]
      ["channel"]
      ["default"]
      ["futures-channel"]
      ["futures-io"]
      ["futures-macro"]
      ["futures-sink"]
      ["io"]
      ["memchr"]
      ["sink"]
      ["slab"]
      ["std"]
    ];
    dependencies = {
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" {inherit profileName;};
      futures_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.28" {profileName = "__noProfile";};
      futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" {inherit profileName;};
      futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.28" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      pin_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" {inherit profileName;};
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" = overridableMkRustCrate (profileName: rec {
    name = "generic-array";
    version = "0.14.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a";
    };
    features = builtins.concatLists [
      ["more_lengths"]
      ["zeroize"]
    ];
    dependencies = {
      typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.16.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.10" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.2.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "be4136b2a15dd319360be1c07d9933517ccf0be8f16bf62a3bee4f0d618df427";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "wasi"
        then "wasi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".gimli."0.28.0" = overridableMkRustCrate (profileName: rec {
    name = "gimli";
    version = "0.28.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6fb8d784f27acf97159b40fc4db5ecd8aa23b9ad5ef69cdd136d3bc80665f0c0";
    };
    features = builtins.concatLists [
      ["read"]
      ["read-core"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".glob."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "glob";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".group."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "group";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f0f9ef7462f7c099f518d754361858f86d8a07af53ba9af0fe635bbccb151a63";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
    dependencies = {
      ff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ff."0.13.0" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".h2."0.3.21" = overridableMkRustCrate (profileName: rec {
    name = "h2";
    version = "0.3.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "91fc23aa11be92976ef4729127f1a74adf36d8436f7816b185d18df956790833";
    };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" {inherit profileName;};
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.8" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.12.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888";
    };
    features = builtins.concatLists [
      ["ahash"]
      ["default"]
      ["inline-more"]
      ["raw"]
    ];
    dependencies = {
      ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.7.6" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.13.2" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.13.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "43a3c133739dddd0d2990f9a4bdf8eb4b21ef50e4851ca85ab661199821d510e";
    };
    features = builtins.concatLists [
      ["ahash"]
      ["default"]
      ["inline-more"]
    ];
    dependencies = {
      ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.0" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.14.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2c6201b9ff9fd90a5a3bac2e56a830d0caa509576f0e503818ee82c181b3437a";
    };
    features = builtins.concatLists [
      ["ahash"]
      ["allocator-api2"]
      ["default"]
      ["inline-more"]
      ["raw"]
    ];
    dependencies = {
      ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.3" {inherit profileName;};
      allocator_api2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hashlink."0.8.4" = overridableMkRustCrate (profileName: rec {
    name = "hashlink";
    version = "0.8.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e8094feaf31ff591f651a2664fb9cfd92bba7a60ce3197265e9482ebe753c8f7";
    };
    dependencies = {
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hdrhistogram."7.5.2" = overridableMkRustCrate (profileName: rec {
    name = "hdrhistogram";
    version = "7.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7f19b9f54f7c7f55e31401bb647626ce0cf0f67b0004982ce815b3ee72a02aa8";
    };
    features = builtins.concatLists [
      ["base64"]
      ["flate2"]
      ["nom"]
      ["serialization"]
    ];
    dependencies = {
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.13.1" {inherit profileName;};
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.27" {inherit profileName;};
      nom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8";
    };
    features = builtins.concatLists [
      ["default"]
      ["unicode"]
      ["unicode-segmentation"]
    ];
    dependencies = {
      unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.10.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "hermit-abi";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "443144c8cdadd93ebf52ddb4056d257f5b52c04d3c804e657d19eb73fc33668b";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "hex";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.3" = overridableMkRustCrate (profileName: rec {
    name = "hkdf";
    version = "0.12.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "791a029f6b9fc27657f6f188ec6e5e43f6911f6f878e0dc5501396e09809d437";
    };
    dependencies = {
      hmac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "hmac";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e";
    };
    features = builtins.concatLists [
      ["reset"]
    ];
    dependencies = {
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hmac-sha1-compact."1.1.4" = overridableMkRustCrate (profileName: rec {
    name = "hmac-sha1-compact";
    version = "1.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dff9d405ec732fa3fcde87264e54a32a84956a377b3e3107de96e59b798c84a7";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".hmac-sha256."1.1.7" = overridableMkRustCrate (profileName: rec {
    name = "hmac-sha256";
    version = "1.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3688e69b38018fec1557254f64c8dc2cc8ec502890182f395dbb0aa997aa5735";
    };
    features = builtins.concatLists [
      ["default"]
      ["digest010"]
      ["traits010"]
    ];
    dependencies = {
      digest010 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hmac-sha512."1.1.5" = overridableMkRustCrate (profileName: rec {
    name = "hmac-sha512";
    version = "1.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e4ce1f4656bae589a3fab938f9f09bf58645b7ed01a2c5f8a3c238e01a4ef78a";
    };
    features = builtins.concatLists [
      ["default"]
      ["digest010"]
      ["sha384"]
      ["traits010"]
    ];
    dependencies = {
      digest010 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".home."0.5.5" = overridableMkRustCrate (profileName: rec {
    name = "home";
    version = "0.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5444c27eef6923071f7ebcc33e3444508466a76f7a2b93da00ed6e19f30c1ddb";
    };
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" = overridableMkRustCrate (profileName: rec {
    name = "http";
    version = "0.2.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bd6effc99afb63425aff9b05836f029929e345a6148a14b7ecd5ab67af944482";
    };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" = overridableMkRustCrate (profileName: rec {
    name = "http-body";
    version = "0.4.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d5f38f16d184e36f2408a55281cd658ecbd3ca05cce6d6510a176eca393e26d1";
    };
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".http-range-header."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "http-range-header";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "add0ab9360ddbd88cfeb3bd9574a1d85cfdfa14db10b3e21d3700dbc4328758f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" = overridableMkRustCrate (profileName: rec {
    name = "httparse";
    version = "1.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "httpdate";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".humantime-serde."1.1.1" = overridableMkRustCrate (profileName: rec {
    name = "humantime-serde";
    version = "1.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "57a3db5ea5923d99402c94e9feb261dc5ee9b4efa158b0315f788cf549cc200c";
    };
    dependencies = {
      humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" = overridableMkRustCrate (profileName: rec {
    name = "hyper";
    version = "0.14.27";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ffb1cfd654a8219eaef89881fdb3bb3b1cdc5fa75ded05d6933b2b382e395468";
    };
    features = builtins.concatLists [
      ["client"]
      ["default"]
      ["full"]
      ["h2"]
      ["http1"]
      ["http2"]
      ["runtime"]
      ["server"]
      ["socket2"]
      ["stream"]
      ["tcp"]
    ];
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.21" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      httparse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" {inherit profileName;};
      httpdate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.9" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      want = rustPackages."registry+https://github.com/rust-lang/crates.io-index".want."0.3.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.24.1" = overridableMkRustCrate (profileName: rec {
    name = "hyper-rustls";
    version = "0.24.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8d78e1e73ec14cf7375674f74d7dde185c8206fd9dea6fb6295e8a98098aaa97";
    };
    features = builtins.concatLists [
      ["acceptor"]
      ["default"]
      ["http1"]
      ["http2"]
      ["log"]
      ["logging"]
      ["native-tokio"]
      ["rustls-native-certs"]
      ["tls12"]
      ["tokio-runtime"]
    ];
    dependencies = {
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.21.7" {inherit profileName;};
      rustls_native_certs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-native-certs."0.6.3" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.24.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".hyper-timeout."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "hyper-timeout";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1";
    };
    dependencies = {
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_io_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-io-timeout."1.2.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.57" = overridableMkRustCrate (profileName: rec {
    name = "iana-time-zone";
    version = "0.1.57";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2fad5b825842d2b38bd206f3e81d6957625fd7f0a361e345c30e01a0ae2dd613";
    };
    features = builtins.concatLists [
      ["fallback"]
    ];
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "android"
        then "android_system_properties"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios"
        then "core_foundation_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.4" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "haiku"
        then "iana_time_zone_haiku"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "js_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "wasm_bindgen"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "windows"
        then "windows"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "iana-time-zone-haiku";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f";
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "ident_case";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".idna."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "idna";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.13" {inherit profileName;};
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.22" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "1.9.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99";
    };
    features = builtins.concatLists [
      ["serde"]
      ["serde-1"]
      ["std"]
    ];
    dependencies = {
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".indexmap."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d5477fe2230a79769d8dc68e0eabf5437907c0457a5614a9e8dddb67f65eb65d";
    };
    features = builtins.concatLists [
      ["default"]
      ["serde"]
      ["std"]
    ];
    dependencies = {
      equivalent = rustPackages."registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" {inherit profileName;};
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".indicatif."0.17.6" = overridableMkRustCrate (profileName: rec {
    name = "indicatif";
    version = "0.17.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0b297dc40733f23a0e52728a58fa9489a5b7638a324932de16b41adc3ef80730";
    };
    features = builtins.concatLists [
      ["default"]
      ["unicode-width"]
    ];
    dependencies = {
      console = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.15.7" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "instant"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" {inherit profileName;};
      number_prefix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".number_prefix."0.4.0" {inherit profileName;};
      portable_atomic = rustPackages."registry+https://github.com/rust-lang/crates.io-index".portable-atomic."1.4.3" {inherit profileName;};
      unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".inherent."1.0.10" = overridableMkRustCrate (profileName: rec {
    name = "inherent";
    version = "1.0.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ce243b1bfa62ffc028f1cc3b6034ec63d649f3031bc8a4fbbb004e1ac17d1f68";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".inotify."0.9.6" = overridableMkRustCrate (profileName: rec {
    name = "inotify";
    version = "0.9.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f8069d3ec154eb856955c1c0fbffefbf5f3c40a104ec912d4797314c1801abff";
    };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
      inotify_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.5" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "inotify-sys";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e05c02b5e89bff3b946cedeca278abc628fe811e604f027c45a8aa3cf793d0eb";
    };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.12" = overridableMkRustCrate (profileName: rec {
    name = "instant";
    version = "0.1.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ipnet."2.8.0" = overridableMkRustCrate (profileName: rec {
    name = "ipnet";
    version = "2.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "28b29a3cd74f0f4598934efe3aeba42bae0eb4680554128851ebbecb02af14e6";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.10.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473";
    };
    features = builtins.concatLists [
      ["use_alloc"]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.11.0" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57";
    };
    features = builtins.concatLists [
      ["default"]
      ["use_alloc"]
      ["use_std"]
    ];
    dependencies = {
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "1.0.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "af150ab688ff2122fcef229be89cb50dd66af9e01a4ff320cc137eecc9bacc38";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.26" = overridableMkRustCrate (profileName: rec {
    name = "jobserver";
    version = "0.1.26";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "936cfd212a0155903bcbc060e316fb6cc7cbf2e1907329391ebadc1fe0ce77c2";
    };
    dependencies = {
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" = overridableMkRustCrate (profileName: rec {
    name = "js-sys";
    version = "0.3.64";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c5f195fe497f702db0f318b07fdd68edb16955aed830df8363d837542f8f935a";
    };
    dependencies = {
      wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".jwt-simple."0.11.6" = overridableMkRustCrate (profileName: rec {
    name = "jwt-simple";
    version = "0.11.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "733741e7bcd1532b56c9ba6c698c069f274f3782ad956f0d2c7f31650cedaa1b";
    };
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.75" {inherit profileName;};
      binstring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".binstring."0.1.1" {inherit profileName;};
      coarsetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".coarsetime."0.1.23" {inherit profileName;};
      ct_codecs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ct-codecs."1.1.1" {inherit profileName;};
      ed25519_compact = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ed25519-compact."2.0.4" {inherit profileName;};
      hmac_sha1_compact = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac-sha1-compact."1.1.4" {inherit profileName;};
      hmac_sha256 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac-sha256."1.1.7" {inherit profileName;};
      hmac_sha512 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac-sha512."1.1.5" {inherit profileName;};
      k256 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".k256."0.13.1" {inherit profileName;};
      p256 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".p256."0.13.2" {inherit profileName;};
      p384 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".p384."0.13.0" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      rsa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rsa."0.7.2" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.6.0" {inherit profileName;};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".k256."0.13.1" = overridableMkRustCrate (profileName: rec {
    name = "k256";
    version = "0.13.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cadb76004ed8e97623117f3df85b17aaa6626ab0b0831e6573f104df16cd1bcc";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["arithmetic"]
      ["default"]
      ["digest"]
      ["ecdsa"]
      ["ecdsa-core"]
      ["once_cell"]
      ["pem"]
      ["pkcs8"]
      ["precomputed-tables"]
      ["schnorr"]
      ["sha2"]
      ["sha256"]
      ["signature"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ecdsa_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ecdsa."0.16.8" {inherit profileName;};
      elliptic_curve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elliptic-curve."0.13.5" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      signature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signature."2.1.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".kqueue."1.0.8" = overridableMkRustCrate (profileName: rec {
    name = "kqueue";
    version = "1.0.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7447f1ca1b7b563588a205fe93dea8df60fd981423a768bc1c0ded35ed147d0c";
    };
    dependencies = {
      kqueue_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kqueue-sys."1.0.4" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".kqueue-sys."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "kqueue-sys";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ed9625ffda8729b85e45cf04090035ac368927b8cebc34898e7c120f52e4838b";
    };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "lazy_static";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646";
    };
    features = builtins.concatLists [
      ["spin"]
      ["spin_no_std"]
    ];
    dependencies = {
      spin = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.147";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b4668fb0ea861c1df094127ac5f1da3409a82116a4ba74fca2e58ef927159bb3";
    };
    features = builtins.concatLists [
      ["default"]
      ["extra_traits"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".libm."0.2.7" = overridableMkRustCrate (profileName: rec {
    name = "libm";
    version = "0.2.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f7012b1bbb0719e1097c47611d3898568c546d597c2e74d66f6087edd5233ff4";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".libsqlite3-sys."0.26.0" = overridableMkRustCrate (profileName: rec {
    name = "libsqlite3-sys";
    version = "0.26.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "afc22eff61b133b115c6e8c74e818c628d6d5e7a502afea6f64dee076dd94326";
    };
    features = builtins.concatLists [
      ["bundled"]
      ["bundled_bindings"]
      ["cc"]
      ["pkg-config"]
      ["unlock_notify"]
      ["vcpkg"]
    ];
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.27" {profileName = "__noProfile";};
      vcpkg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".link-cplusplus."1.0.9" = overridableMkRustCrate (profileName: rec {
    name = "link-cplusplus";
    version = "1.0.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9d240c6f7e1ba3a28b0249f774e6a9dd0175054b52dfbb61b16eb8505c3785c9";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.5" = overridableMkRustCrate (profileName: rec {
    name = "linux-raw-sys";
    version = "0.4.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "57bcfdad1b858c2db7c38303a6d2ad4dfaf5eb53dfeb0910128b2c26d6158503";
    };
    features = builtins.concatLists [
      ["errno"]
      ["general"]
      ["ioctl"]
      ["no_std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.10" = overridableMkRustCrate (profileName: rec {
    name = "lock_api";
    version = "0.4.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c1cc9717a20b1bb222f333e6a92fd32f7d8a18ddc5a3191a11af45dcbf4dcd16";
    };
    features = builtins.concatLists [
      ["atomic_usize"]
      ["default"]
    ];
    dependencies = {
      scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f";
    };
    features = builtins.concatLists [
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.20" = overridableMkRustCrate (profileName: rec {
    name = "lzma-sys";
    version = "0.1.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5fda04ab3764e6cde78b9974eec4f779acaba7c4e84b36eca3cf77c581b85d27";
    };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.27" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "matchers";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558";
    };
    dependencies = {
      regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".matchit."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "matchit";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ed1202b2a6f884ae56f04cff409ab315c5ce26b5e58d7412e484f01fd52f52ef";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".maybe-owned."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "maybe-owned";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4facc753ae494aeb6e3c22f839b158aebd4f9270f55cd3c79906c45476c47ab4";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.5" = overridableMkRustCrate (profileName: rec {
    name = "md-5";
    version = "0.10.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6365506850d44bff6e2fbcb5176cf63650e48bd45ef2fe2665ae1570e0f4b9ca";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" = overridableMkRustCrate (profileName: rec {
    name = "memchr";
    version = "2.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8f232d6ef707e1956a43342693d2a31e72989554d58299d7a88738cc95b0d35c";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" = overridableMkRustCrate (profileName: rec {
    name = "mime";
    version = "0.3.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "minimal-lexical";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a";
    };
    features = builtins.concatLists [
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7";
    };
    features = builtins.concatLists [
      ["with-alloc"]
    ];
    dependencies = {
      adler = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".mio."0.8.8" = overridableMkRustCrate (profileName: rec {
    name = "mio";
    version = "0.8.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "927a765cd3fc26206e66b296465fa9d3e5ab003e651c1b3c060e7956d96b19d2";
    };
    features = builtins.concatLists [
      ["default"]
      ["log"]
      ["net"]
      ["os-ext"]
      ["os-poll"]
    ];
    dependencies = {
      ${
        if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi"
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "wasi"
        then "wasi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "git+https://github.com/zhaofengli/nix-base32.git".nix-base32."0.1.2-alpha.0" = overridableMkRustCrate (profileName: rec {
    name = "nix-base32";
    version = "0.1.2-alpha.0";
    registry = "git+https://github.com/zhaofengli/nix-base32.git";
    src = fetchCrateGit {
      url = https://github.com/zhaofengli/nix-base32.git;
      name = "nix-base32";
      version = "0.1.2-alpha.0";
      rev = "b850c6e9273d1c39bd93abb704a53345f5be92eb";
      ref = "decoder";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" = overridableMkRustCrate (profileName: rec {
    name = "nom";
    version = "7.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      minimal_lexical = rustPackages."registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".notify."6.1.1" = overridableMkRustCrate (profileName: rec {
    name = "notify";
    version = "6.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6205bd8bb1e454ad2e27422015fb5e4f2bcc7e08fa8f27058670d208324a4d2d";
    };
    features = builtins.concatLists [
      ["kqueue"]
      ["macos_kqueue"]
      ["mio"]
    ];
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "darwin"
        then "bitflags"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.0" {inherit profileName;};
      filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.22" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android"
        then "inotify"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify."0.9.6" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonflybsd" || hostPlatform.parsed.kernel.name == "darwin"
        then "kqueue"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".kqueue."1.0.8" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "dragonflybsd" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "darwin"
        then "mio"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.8.8" {inherit profileName;};
      walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.4.0" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" = overridableMkRustCrate (profileName: rec {
    name = "nu-ansi-term";
    version = "0.46.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84";
    };
    dependencies = {
      overload = rustPackages."registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "windows"
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "num-bigint";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "608e7659b5c3d7cba262d894801b9ec9d00de989e8a82bd4bef91d08da45cdc0";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-bigint-dig."0.8.4" = overridableMkRustCrate (profileName: rec {
    name = "num-bigint-dig";
    version = "0.8.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dc84195820f291c7697304f3cbdadd1cb7199c0efc917ff5eafd71225c136151";
    };
    features = builtins.concatLists [
      ["i128"]
      ["prime"]
      ["rand"]
      ["u64_digit"]
      ["zeroize"]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      libm = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.7" {inherit profileName;};
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      num_iter = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.43" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.45";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9";
    };
    features = builtins.concatLists [
      ["default"]
      ["i128"]
      ["std"]
    ];
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.43" = overridableMkRustCrate (profileName: rec {
    name = "num-iter";
    version = "0.1.43";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7d03e6c028c5dc5cac6e2dec0efda81fc887605bb3d884578bb6d6bf7514e252";
    };
    dependencies = {
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f30b0abd723be7e2ffca1272140fac1a2f084c77ec3e123c192b66af1ee9e6c2";
    };
    features = builtins.concatLists [
      ["default"]
      ["i128"]
      ["libm"]
      ["std"]
    ];
    dependencies = {
      libm = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libm."0.2.7" {inherit profileName;};
    };
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" = overridableMkRustCrate (profileName: rec {
    name = "num_cpus";
    version = "1.16.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43";
    };
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "hermit"
        then "hermit_abi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.2" {inherit profileName;};
      ${
        if !hostPlatform.isWindows
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".number_prefix."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "number_prefix";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "830b246a0e5f20af87141b25c173cd1b609bd7779a4617d6ec582abaf90870f3";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".object."0.32.1" = overridableMkRustCrate (profileName: rec {
    name = "object";
    version = "0.32.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9cf5f9dd3933bd50a9e1f149ec995f39ae2c496d31fd772c1fd45ebc27e902b0";
    };
    features = builtins.concatLists [
      ["archive"]
      ["coff"]
      ["elf"]
      ["macho"]
      ["pe"]
      ["read_core"]
      ["unaligned"]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.18.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["race"]
      ["std"]
      ["unstable"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "openssl-probe";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ordered-float."3.9.1" = overridableMkRustCrate (profileName: rec {
    name = "ordered-float";
    version = "3.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2a54938017eacd63036332b4ae5c8a49fc8c0c1d6d629893057e4f13609edd06";
    };
    dependencies = {
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ouroboros."0.17.2" = overridableMkRustCrate (profileName: rec {
    name = "ouroboros";
    version = "0.17.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e2ba07320d39dfea882faa70554b4bd342a5f273ed59ba7c1c6b4c840492c954";
    };
    dependencies = {
      aliasable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aliasable."0.1.3" {inherit profileName;};
      ouroboros_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".ouroboros_macro."0.17.2" {profileName = "__noProfile";};
      static_assertions = rustPackages."registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ouroboros_macro."0.17.2" = overridableMkRustCrate (profileName: rec {
    name = "ouroboros_macro";
    version = "0.17.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ec4c6225c69b4ca778c0aea097321a64c421cf4577b331c61b229267edabb6f8";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".outref."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "outref";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4030760ffd992bef45b0ae3f10ce1aba99e33464c90d14dd7c039884963ddc7a";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "overload";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".p256."0.13.2" = overridableMkRustCrate (profileName: rec {
    name = "p256";
    version = "0.13.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c9863ad85fa8f4460f9c48cb909d38a0d689dba1f6f6988a5e3e0d31071bcd4b";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["arithmetic"]
      ["default"]
      ["digest"]
      ["ecdsa"]
      ["ecdsa-core"]
      ["pem"]
      ["pkcs8"]
      ["sha2"]
      ["sha256"]
      ["std"]
    ];
    dependencies = {
      ecdsa_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ecdsa."0.16.8" {inherit profileName;};
      elliptic_curve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elliptic-curve."0.13.5" {inherit profileName;};
      primeorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".primeorder."0.13.2" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".p384."0.13.0" = overridableMkRustCrate (profileName: rec {
    name = "p384";
    version = "0.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "70786f51bcc69f6a4c0360e063a4cac5419ef7c5cd5b3c99ad70f3be5ba79209";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["arithmetic"]
      ["default"]
      ["digest"]
      ["ecdh"]
      ["ecdsa"]
      ["ecdsa-core"]
      ["pem"]
      ["pkcs8"]
      ["sha2"]
      ["sha384"]
      ["std"]
    ];
    dependencies = {
      ecdsa_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ecdsa."0.16.8" {inherit profileName;};
      elliptic_curve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elliptic-curve."0.13.5" {inherit profileName;};
      primeorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".primeorder."0.13.2" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.10" {inherit profileName;};
      parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.8" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.8" = overridableMkRustCrate (profileName: rec {
    name = "parking_lot_core";
    version = "0.9.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "93f00c865fe7cabf650081affecd3871070f26767e7b2070a3ffae14c654b447";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "redox"
        then "syscall"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.3.5" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_targets"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".paste."1.0.14" = overridableMkRustCrate (profileName: rec {
    name = "paste";
    version = "1.0.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "pem-rfc7468";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "24d159833a9105500e0398934e205e0773f0b27529557134ecfc51c27646adac";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
    dependencies = {
      base64ct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pem-rfc7468."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "pem-rfc7468";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412";
    };
    features = builtins.concatLists [
      ["alloc"]
    ];
    dependencies = {
      base64ct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" = overridableMkRustCrate (profileName: rec {
    name = "percent-encoding";
    version = "2.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.3" = overridableMkRustCrate (profileName: rec {
    name = "pin-project";
    version = "1.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "fda4ed1c6c173e3fc7a83629421152e01d7b1f9b7f65fb301e490e8cfc656422";
    };
    dependencies = {
      pin_project_internal = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.1.3" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.1.3" = overridableMkRustCrate (profileName: rec {
    name = "pin-project-internal";
    version = "1.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4359fd9c9171ec6e8c62926d6faaf553a8dc3f64e1507e76da7911b4f6a04405";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" = overridableMkRustCrate (profileName: rec {
    name = "pin-project-lite";
    version = "0.2.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "pin-utils";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pkcs1."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "pkcs1";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "eff33bdbdfc54cc98a2eca766ebdec3e1b8fb7387523d5c9c9a2891da856f719";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["pem"]
      ["pkcs8"]
      ["std"]
      ["zeroize"]
    ];
    dependencies = {
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.6.1" {inherit profileName;};
      pkcs8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.9.0" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.6.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pkcs1."0.7.5" = overridableMkRustCrate (profileName: rec {
    name = "pkcs1";
    version = "0.7.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["pem"]
      ["pkcs8"]
      ["std"]
      ["zeroize"]
    ];
    dependencies = {
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.8" {inherit profileName;};
      pkcs8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "pkcs8";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9eca2c590a5f85da82668fa685c09ce2888b9430e83299debf1f34b65fd4a4ba";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["pem"]
      ["std"]
    ];
    dependencies = {
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.6.1" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "pkcs8";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["pem"]
      ["std"]
    ];
    dependencies = {
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.8" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.27" = overridableMkRustCrate (profileName: rec {
    name = "pkg-config";
    version = "0.3.27";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "26072860ba924cbfa98ea39c8c19b4dd6a4a25423dbdf219c1eca91aa0cf6964";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".portable-atomic."1.4.3" = overridableMkRustCrate (profileName: rec {
    name = "portable-atomic";
    version = "1.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "31114a898e107c51bb1609ffaf55a0e011cf6a4d7f1170d0015a165082c0338b";
    };
    features = builtins.concatLists [
      ["default"]
      ["fallback"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" = overridableMkRustCrate (profileName: rec {
    name = "ppv-lite86";
    version = "0.2.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de";
    };
    features = builtins.concatLists [
      ["simd"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".primeorder."0.13.2" = overridableMkRustCrate (profileName: rec {
    name = "primeorder";
    version = "0.13.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3c2fcef82c0ec6eefcc179b978446c399b3cdf73c392c35604e399eee6df1ee3";
    };
    dependencies = {
      elliptic_curve = rustPackages."registry+https://github.com/rust-lang/crates.io-index".elliptic-curve."0.13.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-crate";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1d6ea3c4595b96363c13943497db34af4460fb474a95c43f4446ad341b8c9785";
    };
    dependencies = {
      toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.11" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-error";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c";
    };
    features = builtins.concatLists [
      ["default"]
      ["syn"]
      ["syn-error"]
    ];
    dependencies = {
      proc_macro_error_attr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" {profileName = "__noProfile";};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro-error-attr";
    version = "1.0.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
    };
    buildDependencies = {
      version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.66";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "18fb31db3f9bddb2ea821cde30a9f70117e3f119938b5ee630b7403aa6e2ead9";
    };
    features = builtins.concatLists [
      ["default"]
      ["proc-macro"]
      ["span-locations"]
    ];
    dependencies = {
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.11" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".prost."0.11.9" = overridableMkRustCrate (profileName: rec {
    name = "prost";
    version = "0.11.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0b82eaa1d779e9a4bc1c3217db8ffbeabaae1dca241bf70183242128d48681cd";
    };
    features = builtins.concatLists [
      ["default"]
      ["prost-derive"]
      ["std"]
    ];
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      prost_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.11.9" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".prost-derive."0.11.9" = overridableMkRustCrate (profileName: rec {
    name = "prost-derive";
    version = "0.11.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e5d2d8d10f3c6ded6da8b05b5fb3b8a5082514344d56c9f871412d29b4e075b4";
    };
    dependencies = {
      anyhow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.75" {inherit profileName;};
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".prost-types."0.11.9" = overridableMkRustCrate (profileName: rec {
    name = "prost-types";
    version = "0.11.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "213622a1460818959ac1181aaeb2dc9c7f63df720db7d788b3e24eacd1983e13";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      prost = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.11.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ptr_meta."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "ptr_meta";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0738ccf7ea06b608c10564b31debd4f5bc5e197fc8bfe088f68ae5ce81e7a4f1";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      ptr_meta_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".ptr_meta_derive."0.1.4" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ptr_meta_derive."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "ptr_meta_derive";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "16b845dbfca988fa33db069c0e230574d15a3088f147a87b64c7589eb662c9ac";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae";
    };
    features = builtins.concatLists [
      ["default"]
      ["proc-macro"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".radium."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "radium";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.8.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["getrandom"]
      ["libc"]
      ["rand_chacha"]
      ["small_rng"]
      ["std"]
      ["std_rng"]
    ];
    dependencies = {
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.6.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["getrandom"]
      ["std"]
    ];
    dependencies = {
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.3.5" = overridableMkRustCrate (profileName: rec {
    name = "redox_syscall";
    version = "0.3.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "567664f262709473930a4bf9e51bf2ebf3348f2e748ccc50dea20646858f8f29";
    };
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.9.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "697061221ea1b4a94a624f67d0ae2bfe4e22b8a17b6a192afb11046542cc8c47";
    };
    features = builtins.concatLists [
      ["default"]
      ["perf"]
      ["perf-backtrack"]
      ["perf-cache"]
      ["perf-dfa"]
      ["perf-inline"]
      ["perf-literal"]
      ["perf-onepass"]
      ["std"]
      ["unicode"]
      ["unicode-age"]
      ["unicode-bool"]
      ["unicode-case"]
      ["unicode-gencat"]
      ["unicode-perl"]
      ["unicode-script"]
      ["unicode-segment"]
    ];
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.0.5" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      regex_automata = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.3.8" {inherit profileName;};
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.7.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132";
    };
    features = builtins.concatLists [
      ["default"]
      ["regex-syntax"]
      ["std"]
    ];
    dependencies = {
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c2f401f4955220693b56f8ec66ee9c78abffd8d1c4f23dc41a23839eb88f0795";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["dfa-onepass"]
      ["hybrid"]
      ["meta"]
      ["nfa-backtrack"]
      ["nfa-pikevm"]
      ["nfa-thompson"]
      ["perf-inline"]
      ["perf-literal"]
      ["perf-literal-multisubstring"]
      ["perf-literal-substring"]
      ["std"]
      ["syntax"]
      ["unicode"]
      ["unicode-age"]
      ["unicode-bool"]
      ["unicode-case"]
      ["unicode-gencat"]
      ["unicode-perl"]
      ["unicode-script"]
      ["unicode-segment"]
      ["unicode-word-boundary"]
    ];
    dependencies = {
      aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.0.5" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.7.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.6.29";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1";
    };
    features = builtins.concatLists [
      ["default"]
      ["unicode"]
      ["unicode-age"]
      ["unicode-bool"]
      ["unicode-case"]
      ["unicode-gencat"]
      ["unicode-perl"]
      ["unicode-script"]
      ["unicode-segment"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.7.5" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.7.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dbb5fb1acd8a1a18b3dd5be62d25485eb770e05afb408a9627d14d451bae12da";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
      ["unicode"]
      ["unicode-age"]
      ["unicode-bool"]
      ["unicode-case"]
      ["unicode-gencat"]
      ["unicode-perl"]
      ["unicode-script"]
      ["unicode-segment"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".rend."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rend";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "581008d2099240d37fb08d77ad713bcaec2c4d89d50b5b21a8bb1996bbab68ab";
    };
    features = builtins.concatLists [
      ["bytecheck"]
      ["std"]
    ];
    dependencies = {
      bytecheck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecheck."0.6.11" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".reqwest."0.11.20" = overridableMkRustCrate (profileName: rec {
    name = "reqwest";
    version = "0.11.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3e9ad3fe7488d7e34558a2033d45a0c90b72d97b4f80705666fea71472e2e6a1";
    };
    features = builtins.concatLists [
      ["__rustls"]
      ["__tls"]
      ["hyper-rustls"]
      ["json"]
      ["rustls"]
      ["rustls-native-certs"]
      ["rustls-pemfile"]
      ["rustls-tls"]
      ["rustls-tls-native-roots"]
      ["rustls-tls-webpki-roots"]
      ["serde_json"]
      ["stream"]
      ["tokio-rustls"]
      ["tokio-util"]
      ["wasm-streams"]
      ["webpki-roots"]
    ];
    dependencies = {
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "encoding_rs"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.33" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "h2"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.21" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "http_body"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "hyper"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "hyper_rustls"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.24.1" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "ipnet"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.8.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "js_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "log"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "mime"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "once_cell"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "percent_encoding"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "pin_project_lite"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "rustls"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.21.7" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "rustls_native_certs"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-native-certs."0.6.3" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "rustls_pemfile"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.3" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "tokio"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "tokio_rustls"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.24.1" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "tokio_util"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.8" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "wasm_bindgen"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "wasm_bindgen_futures"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.37" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "wasm_streams"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-streams."0.3.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32"
        then "web_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.64" {inherit profileName;};
      ${
        if !(hostPlatform.parsed.cpu.name == "wasm32")
        then "webpki_roots"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.25.2" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "winreg"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.50.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rfc6979."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rfc6979";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f8dd2a808d456c4a54e300a23e9f5a67e122c3024119acbfd73e3bf664491cb2";
    };
    dependencies = {
      hmac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" = overridableMkRustCrate (profileName: rec {
    name = "ring";
    version = "0.16.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["dev_urandom_fallback"]
      ["once_cell"]
    ];
    dependencies = {
      ${
        if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux"
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "solaris"
        then "once_cell"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" || (hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "fuchsia" || hostPlatform.parsed.kernel.name == "linux")
        then "spin"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" {inherit profileName;};
      untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.vendor.name == "unknown" && hostPlatform.parsed.kernel.name == "unknown" && hostPlatform.parsed.abi.name == ""
        then "web_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.64" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "windows"
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rkyv."0.7.42" = overridableMkRustCrate (profileName: rec {
    name = "rkyv";
    version = "0.7.42";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0200c8230b013893c0b2d6213d6ec64ed2b9be2e0e016682b7224ff82cff5c58";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["hashbrown"]
      ["size_32"]
      ["std"]
    ];
    dependencies = {
      bitvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitvec."1.0.1" {inherit profileName;};
      bytecheck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecheck."0.6.11" {inherit profileName;};
      hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" {inherit profileName;};
      ptr_meta = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ptr_meta."0.1.4" {inherit profileName;};
      rend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rend."0.4.0" {inherit profileName;};
      rkyv_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rkyv_derive."0.7.42" {profileName = "__noProfile";};
      seahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".seahash."4.1.0" {inherit profileName;};
      tinyvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.6.0" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rkyv_derive."0.7.42" = overridableMkRustCrate (profileName: rec {
    name = "rkyv_derive";
    version = "0.7.42";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b2e06b915b5c230a17d7a736d1e2e63ee753c256a8614ef3f5147b13a4f5541d";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rsa."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "rsa";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "094052d5470cbcef561cb848a7209968c9f12dfa6d668f4bca048ac5de51099c";
    };
    features = builtins.concatLists [
      ["default"]
      ["pem"]
      ["std"]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint-dig."0.8.4" {inherit profileName;};
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      num_iter = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.43" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
      pkcs1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs1."0.4.1" {inherit profileName;};
      pkcs8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.9.0" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
      signature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signature."1.6.4" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rsa."0.9.2" = overridableMkRustCrate (profileName: rec {
    name = "rsa";
    version = "0.9.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6ab43bb47d23c1a631b4b680199a45255dce26fa9ab2fa902581f624ff13e6a8";
    };
    features = builtins.concatLists [
      ["default"]
      ["pem"]
      ["std"]
      ["u64_digit"]
    ];
    dependencies = {
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      const_oid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".const-oid."0.9.5" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint-dig."0.8.4" {inherit profileName;};
      num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.45" {inherit profileName;};
      num_iter = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-iter."0.1.43" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
      pkcs1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs1."0.7.5" {inherit profileName;};
      pkcs8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
      signature = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signature."2.1.0" {inherit profileName;};
      spki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spki."0.7.2" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" = overridableMkRustCrate (profileName: rec {
    name = "rust_decimal";
    version = "1.32.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a4c4216490d5a413bc6d10fa4742bd7d4955941d062c0ef873141d6b0e7b30fd";
    };
    features = builtins.concatLists [
      ["default"]
      ["serde"]
      ["std"]
    ];
    dependencies = {
      arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.4" {inherit profileName;};
      borsh = rustPackages."registry+https://github.com/rust-lang/crates.io-index".borsh."0.10.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.16" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      rkyv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rkyv."0.7.42" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.23" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.23";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "rustc_version";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366";
    };
    dependencies = {
      semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."1.0.18" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.11" = overridableMkRustCrate (profileName: rec {
    name = "rustix";
    version = "0.38.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c0c3dde1fc030af041adc40e79c0e7fbcf431dd24870053d187d7c66e4b87453";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["fs"]
      ["std"]
      ["use-libc-auxv"]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) || hostPlatform.isWindows
        then "libc_errno"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".errno."0.3.3" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64))
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64))
        then "linux_raw_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.5" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustls."0.21.7" = overridableMkRustCrate (profileName: rec {
    name = "rustls";
    version = "0.21.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cd8d6c9f025a446bc4d18ad9632e69aec8f287aa84499ee335599fabd20c3fd8";
    };
    features = builtins.concatLists [
      ["dangerous_configuration"]
      ["default"]
      ["log"]
      ["logging"]
      ["tls12"]
    ];
    dependencies = {
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" {inherit profileName;};
      webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-webpki."0.101.4" {inherit profileName;};
      sct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sct."0.7.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustls-native-certs."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "rustls-native-certs";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00";
    };
    dependencies = {
      ${
        if hostPlatform.isUnix && !(hostPlatform.parsed.kernel.name == "darwin")
        then "openssl_probe"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.5" {inherit profileName;};
      rustls_pemfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.3" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "schannel"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.22" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "darwin"
        then "security_framework"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework."2.9.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "rustls-pemfile";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2d3987094b1d07b653b7dfdc3f70ce9a1da9c51ac18c1b06b662e4f9a0e9f4b2";
    };
    dependencies = {
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustls-webpki."0.101.4" = overridableMkRustCrate (profileName: rec {
    name = "rustls-webpki";
    version = "0.101.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7d93931baf2d282fff8d3a532bbfd7653f734643161b87e3e01e59a04439bf0d";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" {inherit profileName;};
      untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.14" = overridableMkRustCrate (profileName: rec {
    name = "rustversion";
    version = "1.0.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.15" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "1.0.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "same-file";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502";
    };
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "winapi_util"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.22" = overridableMkRustCrate (profileName: rec {
    name = "schannel";
    version = "0.1.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0c3733bf4cf7ea0880754e19cb5a462007c4a8c1914bff372ccc95b464f1df88";
    };
    dependencies = {
      windows_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "scopeguard";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".scratch."1.0.7" = overridableMkRustCrate (profileName: rec {
    name = "scratch";
    version = "1.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a3cf7c11c38cb994f3d40e8a8cde3bbd1f72a435e4c49e85d6553d8312306152";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sct."0.7.0" = overridableMkRustCrate (profileName: rec {
    name = "sct";
    version = "0.7.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4";
    };
    dependencies = {
      ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.20" {inherit profileName;};
      untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-bae."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "sea-bae";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3bd3534a9978d0aa7edd2808dc1f8f31c4d0ecd31ddf71d997b3c98e9f3c9114";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-orm."0.12.2" = overridableMkRustCrate (profileName: rec {
    name = "sea-orm";
    version = "0.12.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "61f6c7daef05dde3476d97001e11fca7a52b655aa3bf4fd610ab2da1176a2ed5";
    };
    features = builtins.concatLists [
      ["bigdecimal"]
      ["chrono"]
      ["debug-print"]
      ["default"]
      ["macros"]
      ["postgres-array"]
      ["runtime-tokio"]
      ["runtime-tokio-rustls"]
      ["rust_decimal"]
      ["sea-query-binder"]
      ["serde_json"]
      ["sqlx"]
      ["sqlx-dep"]
      ["sqlx-postgres"]
      ["sqlx-sqlite"]
      ["time"]
      ["uuid"]
      ["with-bigdecimal"]
      ["with-chrono"]
      ["with-json"]
      ["with-rust_decimal"]
      ["with-time"]
      ["with-uuid"]
    ];
    dependencies = {
      async_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.5" {inherit profileName;};
      async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" {profileName = "__noProfile";};
      bigdecimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      ouroboros = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ouroboros."0.17.2" {inherit profileName;};
      rust_decimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" {inherit profileName;};
      sea_orm_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-orm-macros."0.12.2" {profileName = "__noProfile";};
      sea_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-query."0.30.1" {inherit profileName;};
      sea_query_binder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-query-binder."0.5.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      sqlx = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx."0.7.1" {inherit profileName;};
      strum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strum."0.25.0" {inherit profileName;};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-orm-cli."0.12.2" = overridableMkRustCrate (profileName: rec {
    name = "sea-orm-cli";
    version = "0.12.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3e3f0ff2fa5672e2e7314d107c6498a18e469beeb340a0ed84e3075fce73c2cd";
    };
    features = builtins.concatLists [
      ["clap"]
      ["cli"]
      ["dotenvy"]
    ];
    dependencies = {
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.4.2" {inherit profileName;};
      dotenvy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;};
      glob = rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.1" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      sea_schema = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-schema."0.14.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-orm-macros."0.12.2" = overridableMkRustCrate (profileName: rec {
    name = "sea-orm-macros";
    version = "0.12.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cd90e73d5f5b184bad525767da29fbfec132b4e62ebd6f60d2f2737ec6468f62";
    };
    features = builtins.concatLists [
      ["bae"]
      ["derive"]
      ["postgres-array"]
      ["strum"]
    ];
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      bae = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-bae."0.2.0" {profileName = "__noProfile";};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.11" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-orm-migration."0.12.2" = overridableMkRustCrate (profileName: rec {
    name = "sea-orm-migration";
    version = "0.12.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "21f673fcefb3a7e7b89a12b6c0e854ec0be14367635ac3435369c8ad7f11e09e";
    };
    features = builtins.concatLists [
      ["clap"]
      ["cli"]
      ["default"]
      ["dotenvy"]
      ["sea-orm-cli"]
    ];
    dependencies = {
      async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" {profileName = "__noProfile";};
      clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.4.2" {inherit profileName;};
      dotenvy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;};
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      sea_orm = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-orm."0.12.2" {inherit profileName;};
      sea_orm_cli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-orm-cli."0.12.2" {inherit profileName;};
      sea_schema = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-schema."0.14.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-query."0.30.1" = overridableMkRustCrate (profileName: rec {
    name = "sea-query";
    version = "0.30.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "28c05a5bf6403834be253489bbe95fa9b1e5486bc843b61f60d26b5c9c1e244b";
    };
    features = builtins.concatLists [
      ["backend-mysql"]
      ["backend-postgres"]
      ["backend-sqlite"]
      ["bigdecimal"]
      ["chrono"]
      ["derivative"]
      ["derive"]
      ["hashable-value"]
      ["ordered-float"]
      ["postgres-array"]
      ["rust_decimal"]
      ["sea-query-derive"]
      ["serde_json"]
      ["thread-safe"]
      ["time"]
      ["uuid"]
      ["with-bigdecimal"]
      ["with-chrono"]
      ["with-json"]
      ["with-rust_decimal"]
      ["with-time"]
      ["with-uuid"]
    ];
    dependencies = {
      bigdecimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      derivative = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derivative."2.2.0" {profileName = "__noProfile";};
      inherent = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".inherent."1.0.10" {profileName = "__noProfile";};
      ordered_float = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordered-float."3.9.1" {inherit profileName;};
      rust_decimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" {inherit profileName;};
      sea_query_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-query-derive."0.4.0" {profileName = "__noProfile";};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-query-binder."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "sea-query-binder";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "36bbb68df92e820e4d5aeb17b4acd5cc8b5d18b2c36a4dd6f4626aabfa7ab1b9";
    };
    features = builtins.concatLists [
      ["bigdecimal"]
      ["chrono"]
      ["postgres-array"]
      ["runtime-tokio-rustls"]
      ["rust_decimal"]
      ["serde_json"]
      ["sqlx"]
      ["sqlx-postgres"]
      ["sqlx-sqlite"]
      ["time"]
      ["uuid"]
      ["with-bigdecimal"]
      ["with-chrono"]
      ["with-json"]
      ["with-rust_decimal"]
      ["with-time"]
      ["with-uuid"]
    ];
    dependencies = {
      bigdecimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      rust_decimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" {inherit profileName;};
      sea_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-query."0.30.1" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      sqlx = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx."0.7.1" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-query-derive."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "sea-query-derive";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bd78f2e0ee8e537e9195d1049b752e0433e2cac125426bccb7b5c3e508096117";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-schema."0.14.0" = overridableMkRustCrate (profileName: rec {
    name = "sea-schema";
    version = "0.14.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c3e09eb40c78cee8fef8dfbb648036a26b7ad1f618499203ad0e8b6f97593f7f";
    };
    features = builtins.concatLists [
      ["def"]
      ["default"]
      ["discovery"]
      ["futures"]
      ["mysql"]
      ["parser"]
      ["postgres"]
      ["probe"]
      ["query"]
      ["sqlite"]
      ["writer"]
    ];
    dependencies = {
      futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.28" {inherit profileName;};
      sea_query = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-query."0.30.1" {inherit profileName;};
      sea_schema_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sea-schema-derive."0.2.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sea-schema-derive."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "sea-schema-derive";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c6f686050f76bffc4f635cda8aea6df5548666b830b52387e8bc7de11056d11e";
    };
    dependencies = {
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".seahash."4.1.0" = overridableMkRustCrate (profileName: rec {
    name = "seahash";
    version = "4.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1c107b6f4780854c8b126e228ea8869f4d7b71260f962fefb57b996b8959ba6b";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".sec1."0.7.3" = overridableMkRustCrate (profileName: rec {
    name = "sec1";
    version = "0.7.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["der"]
      ["pem"]
      ["pkcs8"]
      ["point"]
      ["std"]
      ["subtle"]
      ["zeroize"]
    ];
    dependencies = {
      base16ct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base16ct."0.2.0" {inherit profileName;};
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.8" {inherit profileName;};
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;};
      pkcs8 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkcs8."0.10.2" {inherit profileName;};
      subtle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" {inherit profileName;};
      zeroize = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".security-framework."2.9.2" = overridableMkRustCrate (profileName: rec {
    name = "security-framework";
    version = "2.9.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de";
    };
    features = builtins.concatLists [
      ["OSX_10_9"]
      ["default"]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {inherit profileName;};
      core_foundation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.9.3" {inherit profileName;};
      core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.4" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      security_framework_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.9.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."2.9.1" = overridableMkRustCrate (profileName: rec {
    name = "security-framework-sys";
    version = "2.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a";
    };
    features = builtins.concatLists [
      ["OSX_10_9"]
    ];
    dependencies = {
      core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.4" {inherit profileName;};
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".semver."1.0.18" = overridableMkRustCrate (profileName: rec {
    name = "semver";
    version = "1.0.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b0293b4b29daaf487284529cc2f5675b8e57c61f70167ba415a463651fd6a918";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.188";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cf9e0fcba69a370eed61bcf2b728575f726b50b55cba78064753d708ddc7549e";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["derive"]
      ["rc"]
      ["serde_derive"]
      ["std"]
    ];
    dependencies = {
      serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.188" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.188" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.188";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4eca7ac642d82aa35b60049a6eccb4be6be75e599bd2e9adb5f875a737654af2";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.105";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "693151e1ac27563d6dbcec9dee9fbd5da8539b20fa14ad3752b2e6d363ace360";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["raw_value"]
      ["std"]
    ];
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.15" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "serde_path_to_error";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4beec8bce849d58d06238cb50db2e1c417cfeafa4c63f692b15c82b7c80f8335";
    };
    dependencies = {
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "serde_spanned";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "96426c9936fd7a0124915f9185ea1d20aa9445cc9821142f0a73bc9207a2e186";
    };
    features = builtins.concatLists [
      ["serde"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "serde_urlencoded";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd";
    };
    dependencies = {
      form_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.0" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.15" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_with."3.3.0" = overridableMkRustCrate (profileName: rec {
    name = "serde_with";
    version = "3.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1ca3b16a3d82c4088f343b7480a93550b3eabe1a358569c2dfe38bbcead07237";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["macros"]
      ["std"]
    ];
    dependencies = {
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      chrono_0_4 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      indexmap_1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" {inherit profileName;};
      indexmap_2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.0.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      serde_with_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_with_macros."3.3.0" {profileName = "__noProfile";};
      time_0_3 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_with_macros."3.3.0" = overridableMkRustCrate (profileName: rec {
    name = "serde_with_macros";
    version = "3.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2e6be15c453eb305019bfa438b1593c731f36a289a7853f7707ee29e870b3b3c";
    };
    dependencies = {
      darling = rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.20.3" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".serde_yaml."0.9.25" = overridableMkRustCrate (profileName: rec {
    name = "serde_yaml";
    version = "0.9.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1a49e178e4452f45cb61d0cd8cebc1b0fafd3e41929e996cef79aa3aca91f574";
    };
    dependencies = {
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.0.0" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.15" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      unsafe_libyaml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unsafe-libyaml."0.2.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.5" = overridableMkRustCrate (profileName: rec {
    name = "sha1";
    version = "0.10.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f04293dc80c3993519f2d7f6f511707ee7094fe0c6d3406feb330cdb3540eba3";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64"
        then "cpufeatures"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.9" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" = overridableMkRustCrate (profileName: rec {
    name = "sha2";
    version = "0.10.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "479fb9d862239e610720565ca91403019f2f00410f1864c5aa7479b950a76ed8";
    };
    features = builtins.concatLists [
      ["asm"]
      ["default"]
      ["sha2-asm"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "i686"
        then "cpufeatures"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.9" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "i686"
        then "sha2_asm"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2-asm."0.6.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sha2-asm."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "sha2-asm";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f27ba7066011e3fb30d808b51affff34f0a66d3a03a58edd787c6e420e40e44e";
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "sharded-slab";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "900fba806f70c630b0a382d0d825e17a0f19fcd059a2ade1ff237bcddf446b31";
    };
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".shell-words."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "shell-words";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.1" = overridableMkRustCrate (profileName: rec {
    name = "signal-hook-registry";
    version = "1.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1";
    };
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".signature."1.6.4" = overridableMkRustCrate (profileName: rec {
    name = "signature";
    version = "1.6.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "74233d3b3b2f6d4b006dc19dee745e73e2a6bfb6f93607cd3b02bd5b00797d7c";
    };
    features = builtins.concatLists [
      ["digest"]
      ["digest-preview"]
      ["rand-preview"]
      ["rand_core"]
      ["std"]
    ];
    dependencies = {
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".signature."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "signature";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5e1788eed21689f9cf370582dfc467ef36ed9c707f073528ddafa8d83e3b8500";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["digest"]
      ["rand_core"]
      ["std"]
    ];
    dependencies = {
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".simdutf8."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "simdutf8";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f27f6278552951f1f2b8cf9da965d10969b2efdea95a6ec47987ab46edfe263a";
    };
    features = builtins.concatLists [
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" = overridableMkRustCrate (profileName: rec {
    name = "slab";
    version = "0.4.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    buildDependencies = {
      autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "62bb4feee49fdd9f707ef802e22365a35de4b7b299de4763d44bfea899442ff9";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".socket2."0.4.9" = overridableMkRustCrate (profileName: rec {
    name = "socket2";
    version = "0.4.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "64a4a911eed85daf18834cfaa86a79b7d266ff93ff5ba14005426219480ed662";
    };
    features = builtins.concatLists [
      ["all"]
    ];
    dependencies = {
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.3" = overridableMkRustCrate (profileName: rec {
    name = "socket2";
    version = "0.5.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2538b18701741680e0322a2302176d3253a35388e2e62f172f64f4f16605f877";
    };
    features = builtins.concatLists [
      ["all"]
    ];
    dependencies = {
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "spin";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".spin."0.9.8" = overridableMkRustCrate (profileName: rec {
    name = "spin";
    version = "0.9.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67";
    };
    features = builtins.concatLists [
      ["barrier"]
      ["default"]
      ["lazy"]
      ["lock_api"]
      ["lock_api_crate"]
      ["mutex"]
      ["once"]
      ["rwlock"]
      ["spin_mutex"]
    ];
    dependencies = {
      lock_api_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.10" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".spki."0.6.0" = overridableMkRustCrate (profileName: rec {
    name = "spki";
    version = "0.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "67cf02bbac7a337dc36e4f5a693db6c21e7863f45070f7064577eb4367a3212b";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["base64ct"]
      ["pem"]
      ["std"]
    ];
    dependencies = {
      base64ct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" {inherit profileName;};
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.6.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".spki."0.7.2" = overridableMkRustCrate (profileName: rec {
    name = "spki";
    version = "0.7.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9d1e996ef02c474957d681f1b05213dfb0abab947b446a62d37770b23500184a";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["pem"]
      ["std"]
    ];
    dependencies = {
      base64ct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64ct."1.6.0" {inherit profileName;};
      der = rustPackages."registry+https://github.com/rust-lang/crates.io-index".der."0.7.8" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlformat."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "sqlformat";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "6b7b278788e7be4d0d29c0f39497a0eef3fba6bbc8e70d8bf7fde46edeaa9e85";
    };
    dependencies = {
      itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.11.0" {inherit profileName;};
      nom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" {inherit profileName;};
      unicode_categories = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8e58421b6bc416714d5115a2ca953718f6c621a51b68e4f4922aea5a4391a721";
    };
    features = builtins.concatLists [
      ["_rt-tokio"]
      ["bigdecimal"]
      ["chrono"]
      ["json"]
      ["postgres"]
      ["runtime-tokio"]
      ["runtime-tokio-rustls"]
      ["rust_decimal"]
      ["sqlite"]
      ["sqlx-postgres"]
      ["sqlx-sqlite"]
      ["time"]
      ["tls-rustls"]
      ["uuid"]
    ];
    dependencies = {
      sqlx_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" {inherit profileName;};
      sqlx_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-macros."0.7.1" {profileName = "__noProfile";};
      sqlx_mysql = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-mysql."0.7.1" {inherit profileName;};
      sqlx_postgres = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-postgres."0.7.1" {inherit profileName;};
      sqlx_sqlite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-sqlite."0.7.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx-core";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dd4cef4251aabbae751a3710927945901ee1d97ee96d757f6880ebb9a79bfd53";
    };
    features = builtins.concatLists [
      ["_rt-tokio"]
      ["_tls-rustls"]
      ["any"]
      ["bigdecimal"]
      ["chrono"]
      ["crc"]
      ["default"]
      ["json"]
      ["migrate"]
      ["offline"]
      ["rust_decimal"]
      ["rustls"]
      ["rustls-pemfile"]
      ["serde"]
      ["serde_json"]
      ["sha2"]
      ["time"]
      ["tokio"]
      ["tokio-stream"]
      ["uuid"]
      ["webpki-roots"]
    ];
    dependencies = {
      ahash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.3" {inherit profileName;};
      atoi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;};
      bigdecimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" {inherit profileName;};
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      crc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc."3.0.1" {inherit profileName;};
      crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.3.8" {inherit profileName;};
      dotenvy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;};
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" {inherit profileName;};
      event_listener = rustPackages."registry+https://github.com/rust-lang/crates.io-index".event-listener."2.5.3" {inherit profileName;};
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_intrusive = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-intrusive."0.5.0" {inherit profileName;};
      futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      hashlink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashlink."0.8.4" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.0.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      paste = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.14" {profileName = "__noProfile";};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      rust_decimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" {inherit profileName;};
      rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.21.7" {inherit profileName;};
      rustls_pemfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-pemfile."1.0.3" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      sqlformat = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlformat."0.2.2" {inherit profileName;};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
      webpki_roots = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.24.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx-macros."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx-macros";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "208e3165167afd7f3881b16c1ef3f2af69fa75980897aac8874a0696516d12c2";
    };
    features = builtins.concatLists [
      ["_rt-tokio"]
      ["_tls-rustls"]
      ["bigdecimal"]
      ["chrono"]
      ["default"]
      ["json"]
      ["postgres"]
      ["rust_decimal"]
      ["sqlite"]
      ["time"]
      ["uuid"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      sqlx_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" {inherit profileName;};
      sqlx_macros_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-macros-core."0.7.1" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx-macros-core."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx-macros-core";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8a4a8336d278c62231d87f24e8a7a74898156e34c1c18942857be2acb29c7dfc";
    };
    features = builtins.concatLists [
      ["_rt-tokio"]
      ["_tls-rustls"]
      ["bigdecimal"]
      ["chrono"]
      ["default"]
      ["json"]
      ["postgres"]
      ["rust_decimal"]
      ["sqlite"]
      ["sqlx-postgres"]
      ["sqlx-sqlite"]
      ["time"]
      ["tokio"]
      ["uuid"]
    ];
    dependencies = {
      dotenvy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;};
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" {inherit profileName;};
      heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      sqlx_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" {inherit profileName;};
      sqlx_mysql = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-mysql."0.7.1" {inherit profileName;};
      sqlx_postgres = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-postgres."0.7.1" {inherit profileName;};
      sqlx_sqlite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-sqlite."0.7.1" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" {inherit profileName;};
      tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.8.0" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx-mysql."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx-mysql";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8ca69bf415b93b60b80dc8fda3cb4ef52b2336614d8da2de5456cc942a110482";
    };
    features = builtins.concatLists [
      ["bigdecimal"]
      ["chrono"]
      ["json"]
      ["migrate"]
      ["offline"]
      ["rust_decimal"]
      ["serde"]
      ["time"]
      ["uuid"]
    ];
    dependencies = {
      atoi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;};
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      bigdecimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" {inherit profileName;};
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.0" {inherit profileName;};
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      crc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc."3.0.1" {inherit profileName;};
      digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" {inherit profileName;};
      dotenvy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;};
      either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.9.0" {inherit profileName;};
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      hkdf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.3" {inherit profileName;};
      hmac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      md5 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.5" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      rsa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rsa."0.9.2" {inherit profileName;};
      rust_decimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.5" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      sqlx_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" {inherit profileName;};
      stringprep = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stringprep."0.1.4" {inherit profileName;};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
      whoami = rustPackages."registry+https://github.com/rust-lang/crates.io-index".whoami."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx-postgres."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx-postgres";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a0db2df1b8731c3651e204629dd55e52adbae0462fa1bdcbed56a2302c18181e";
    };
    features = builtins.concatLists [
      ["bigdecimal"]
      ["chrono"]
      ["json"]
      ["migrate"]
      ["offline"]
      ["rust_decimal"]
      ["time"]
      ["uuid"]
    ];
    dependencies = {
      atoi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;};
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      bigdecimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bigdecimal."0.3.1" {inherit profileName;};
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.0" {inherit profileName;};
      byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.4.3" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      crc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc."3.0.1" {inherit profileName;};
      dotenvy = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenvy."0.15.7" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "windows"
        then "etcetera"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".etcetera."0.8.0" {inherit profileName;};
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.3" {inherit profileName;};
      hkdf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hkdf."0.12.3" {inherit profileName;};
      hmac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hmac."0.12.1" {inherit profileName;};
      home = rustPackages."registry+https://github.com/rust-lang/crates.io-index".home."0.5.5" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      md5 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.5" {inherit profileName;};
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
      num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.4" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      rust_decimal = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust_decimal."1.32.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.10.5" {inherit profileName;};
      sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.10.7" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      sqlx_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" {inherit profileName;};
      stringprep = rustPackages."registry+https://github.com/rust-lang/crates.io-index".stringprep."0.1.4" {inherit profileName;};
      thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
      whoami = rustPackages."registry+https://github.com/rust-lang/crates.io-index".whoami."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sqlx-sqlite."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "sqlx-sqlite";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "be4c21bf34c7cae5b283efb3ac1bcc7670df7561124dc2f8bdc0b59be40f79a2";
    };
    features = builtins.concatLists [
      ["chrono"]
      ["json"]
      ["migrate"]
      ["offline"]
      ["serde"]
      ["time"]
      ["uuid"]
    ];
    dependencies = {
      atoi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atoi."2.0.0" {inherit profileName;};
      chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.30" {inherit profileName;};
      flume = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flume."0.10.14" {inherit profileName;};
      futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.28" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.28" {inherit profileName;};
      futures_intrusive = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-intrusive."0.5.0" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      libsqlite3_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libsqlite3-sys."0.26.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      sqlx_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sqlx-core."0.7.1" {inherit profileName;};
      time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" {inherit profileName;};
      uuid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".static_assertions."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "static_assertions";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".stringprep."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "stringprep";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bb41d74e231a107a1b4ee36bd1214b11285b77768d2e3824aedafa988fd36ee6";
    };
    dependencies = {
      finl_unicode = rustPackages."registry+https://github.com/rust-lang/crates.io-index".finl_unicode."1.2.0" {inherit profileName;};
      unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.13" {inherit profileName;};
      unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.22" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.10.0" = overridableMkRustCrate (profileName: rec {
    name = "strsim";
    version = "0.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".strum."0.25.0" = overridableMkRustCrate (profileName: rec {
    name = "strum";
    version = "0.25.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "290d54ea6f91c969195bdbcd7442c8c2a2ba87da8bf60a7ee86a235d4bc1e125";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".subtle."2.5.0" = overridableMkRustCrate (profileName: rec {
    name = "subtle";
    version = "2.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc";
    };
    features = builtins.concatLists [
      ["i128"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "1.0.109";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237";
    };
    features = builtins.concatLists [
      ["clone-impls"]
      ["default"]
      ["derive"]
      ["extra-traits"]
      ["fold"]
      ["full"]
      ["parsing"]
      ["printing"]
      ["proc-macro"]
      ["quote"]
      ["visit"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.11" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "2.0.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "718fa2415bcb8d8bd775917a1bf12a7931b6dfa890753378538118181e0cb398";
    };
    features = builtins.concatLists [
      ["clone-impls"]
      ["default"]
      ["derive"]
      ["extra-traits"]
      ["full"]
      ["parsing"]
      ["printing"]
      ["proc-macro"]
      ["quote"]
      ["visit"]
      ["visit-mut"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      unicode_ident = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.11" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "sync_wrapper";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "tap";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.8.0" = overridableMkRustCrate (profileName: rec {
    name = "tempfile";
    version = "3.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "cb94d2f3cc536af71caac6b6fcebf65860b347e7ce0cc9ebe8f70d3e521054ef";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      fastrand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.0.0" {inherit profileName;};
      ${
        if hostPlatform.parsed.kernel.name == "redox"
        then "syscall"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.3.5" {inherit profileName;};
      ${
        if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi"
        then "rustix"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.11" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "termcolor";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "be55cf8942feac5c765c2c993422806843c9a9a45d4d5c407ad6dd2ea95eb9b6";
    };
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "winapi_util"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.48" = overridableMkRustCrate (profileName: rec {
    name = "thiserror";
    version = "1.0.48";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9d6d7a740b8a666a7e828dd00da9c0dc290dff53154ea77ac109281de90589b7";
    };
    dependencies = {
      thiserror_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.48" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.48" = overridableMkRustCrate (profileName: rec {
    name = "thiserror-impl";
    version = "1.0.48";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "49922ecae66cc8a249b77e68d1d0623c1b2c514f0060c27cdc68bd62a1219d35";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" = overridableMkRustCrate (profileName: rec {
    name = "thread_local";
    version = "1.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".time."0.3.28" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.3.28";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "17f6bb557fd245c28e6411aa56b6403c689ad95061f50e4be16c274e70a17e48";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["formatting"]
      ["macros"]
      ["parsing"]
      ["serde"]
      ["serde-well-known"]
      ["std"]
    ];
    dependencies = {
      deranged = rustPackages."registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.8" {inherit profileName;};
      itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.9" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      time_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.1" {inherit profileName;};
      time_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.14" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "time-core";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7300fbefb4dadc1af235a9cef3737cea692a9d97e1b9cbcd4ebdae6f8868e6fb";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.14" = overridableMkRustCrate (profileName: rec {
    name = "time-macros";
    version = "0.2.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1a942f44339478ef67935ab2bbaec2fb0322496cf3cbe84b261e06ac3814c572";
    };
    features = builtins.concatLists [
      ["formatting"]
      ["parsing"]
      ["serde"]
    ];
    dependencies = {
      time_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "tinyvec";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["tinyvec_macros"]
    ];
    dependencies = {
      tinyvec_macros = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tinyvec_macros."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "tinyvec_macros";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio";
    version = "1.32.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "17ed6077ed6cd6c74735e21f37eb16dc3935f96878b1fe961074089cc80893f9";
    };
    features = builtins.concatLists [
      ["bytes"]
      ["default"]
      ["fs"]
      ["io-std"]
      ["io-util"]
      ["libc"]
      ["macros"]
      ["mio"]
      ["net"]
      ["num_cpus"]
      ["process"]
      ["rt"]
      ["rt-multi-thread"]
      ["signal-hook-registry"]
      ["socket2"]
      ["sync"]
      ["test-util"]
      ["time"]
      ["tokio-macros"]
      ["tracing"]
      ["windows-sys"]
    ];
    dependencies = {
      ${
        if false
        then "backtrace"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.69" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "libc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.8.8" {inherit profileName;};
      num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      ${
        if hostPlatform.isUnix
        then "signal_hook_registry"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.1" {inherit profileName;};
      socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.3" {inherit profileName;};
      tokio_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.1.0" {profileName = "__noProfile";};
      ${
        if false
        then "tracing"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "windows_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio-io-timeout."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-io-timeout";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf";
    };
    dependencies = {
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-macros";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "630bdcf245f78637c13ec01ffae6187cca34625e8c63150d424b59e55af2675e";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.24.1" = overridableMkRustCrate (profileName: rec {
    name = "tokio-rustls";
    version = "0.24.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081";
    };
    features = builtins.concatLists [
      ["default"]
      ["logging"]
      ["tls12"]
    ];
    dependencies = {
      rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.21.7" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" = overridableMkRustCrate (profileName: rec {
    name = "tokio-stream";
    version = "0.1.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842";
    };
    features = builtins.concatLists [
      ["default"]
      ["fs"]
      ["net"]
      ["time"]
    ];
    dependencies = {
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio-test."0.4.3" = overridableMkRustCrate (profileName: rec {
    name = "tokio-test";
    version = "0.4.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e89b3cbabd3ae862100094ae433e1def582cf86451b4e9bf83aa7ac1d8a7d719";
    };
    dependencies = {
      async_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".async-stream."0.3.5" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.8" = overridableMkRustCrate (profileName: rec {
    name = "tokio-util";
    version = "0.7.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "806fe8c2c87eccc8b3267cbae29ed3ab2d0bd37fca70ab622e46aaa9375ddb7d";
    };
    features = builtins.concatLists [
      ["codec"]
      ["default"]
      ["io"]
      ["tracing"]
    ];
    dependencies = {
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.28" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".toml."0.5.11" = overridableMkRustCrate (profileName: rec {
    name = "toml";
    version = "0.5.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".toml."0.7.7" = overridableMkRustCrate (profileName: rec {
    name = "toml";
    version = "0.7.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "de0a3ab2091e52d7299a39d098e200114a972df0a7724add02a273aa9aada592";
    };
    features = builtins.concatLists [
      ["default"]
      ["display"]
      ["parse"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_spanned = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.3" {inherit profileName;};
      toml_datetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.3" {inherit profileName;};
      toml_edit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.19.15" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.3" = overridableMkRustCrate (profileName: rec {
    name = "toml_datetime";
    version = "0.6.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7cda73e2f1397b1262d6dfdcef8aafae14d1de7748d66822d3bfeeb6d03e5e4b";
    };
    features = builtins.concatLists [
      ["serde"]
    ];
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.19.15" = overridableMkRustCrate (profileName: rec {
    name = "toml_edit";
    version = "0.19.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421";
    };
    features = builtins.concatLists [
      ["default"]
      ["serde"]
    ];
    dependencies = {
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.0.0" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_spanned = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.3" {inherit profileName;};
      toml_datetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.3" {inherit profileName;};
      winnow = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winnow."0.5.15" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tonic."0.9.2" = overridableMkRustCrate (profileName: rec {
    name = "tonic";
    version = "0.9.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3082666a3a6433f7f511c7192923fa1fe07c69332d3c6a2e6bb040b569199d5a";
    };
    features = builtins.concatLists [
      ["channel"]
      ["codegen"]
      ["default"]
      ["prost"]
      ["transport"]
    ];
    dependencies = {
      async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.73" {profileName = "__noProfile";};
      axum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum."0.6.20" {inherit profileName;};
      base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.3" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.3.21" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.14.27" {inherit profileName;};
      hyper_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-timeout."0.4.1" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
      pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.3" {inherit profileName;};
      prost = rustPackages."registry+https://github.com/rust-lang/crates.io-index".prost."0.11.9" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_stream = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" {inherit profileName;};
      tower = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" {inherit profileName;};
      tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" = overridableMkRustCrate (profileName: rec {
    name = "tower";
    version = "0.4.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c";
    };
    features = builtins.concatLists [
      ["__common"]
      ["balance"]
      ["buffer"]
      ["default"]
      ["discover"]
      ["futures-core"]
      ["futures-util"]
      ["indexmap"]
      ["limit"]
      ["load"]
      ["log"]
      ["make"]
      ["pin-project"]
      ["pin-project-lite"]
      ["rand"]
      ["ready-cache"]
      ["retry"]
      ["slab"]
      ["timeout"]
      ["tokio"]
      ["tokio-util"]
      ["tracing"]
      ["util"]
    ];
    dependencies = {
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.3" {inherit profileName;};
      pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.3" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {inherit profileName;};
      slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" {inherit profileName;};
      tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.32.0" {inherit profileName;};
      tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.8" {inherit profileName;};
      tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tower-http."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "tower-http";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "61c5bb1d698276a2443e5ecfabc1008bf15a36c12e6a7176e7bf089ea9131140";
    };
    features = builtins.concatLists [
      ["catch-panic"]
      ["default"]
      ["trace"]
      ["tracing"]
    ];
    dependencies = {
      bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.0" {inherit profileName;};
      bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" {inherit profileName;};
      futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.28" {inherit profileName;};
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.9" {inherit profileName;};
      http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.4.5" {inherit profileName;};
      http_range_header = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-range-header."0.3.1" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tower_layer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" {inherit profileName;};
      tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "tower-layer";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" = overridableMkRustCrate (profileName: rec {
    name = "tower-service";
    version = "0.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" = overridableMkRustCrate (profileName: rec {
    name = "tracing";
    version = "0.1.37";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8";
    };
    features = builtins.concatLists [
      ["attributes"]
      ["default"]
      ["log"]
      ["std"]
      ["tracing-attributes"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" {inherit profileName;};
      tracing_attributes = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.26" {profileName = "__noProfile";};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.26" = overridableMkRustCrate (profileName: rec {
    name = "tracing-attributes";
    version = "0.1.26";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5f4f31f56159e98206da9efd823404b79b6ef3143b4a7ab76e67b1751b25a4ab";
    };
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" = overridableMkRustCrate (profileName: rec {
    name = "tracing-core";
    version = "0.1.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0955b8137a1df6f1a2e9a37d8a6656291ff0297c1a97c24e0d8425fe2312f79a";
    };
    features = builtins.concatLists [
      ["default"]
      ["once_cell"]
      ["std"]
      ["valuable"]
    ];
    dependencies = {
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      ${
        if false
        then "valuable"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-error."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "tracing-error";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d686ec1c0f384b1277f097b2f279a2ecc11afe8c133c1aabf036a27cb4cd206e";
    };
    features = builtins.concatLists [
      ["default"]
      ["traced-error"]
    ];
    dependencies = {
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_subscriber = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "tracing-log";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "78ddad33d2d10b1ed7eb9d1f518a5674713876e97e5bb9b7345a7984fbb4f922";
    };
    features = builtins.concatLists [
      ["log-tracer"]
      ["std"]
    ];
    dependencies = {
      lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "tracing-serde";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bc6b213177105856957181934e4920de57730fc69bf42c37ee5bb664d406d9e1";
    };
    dependencies = {
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.17" = overridableMkRustCrate (profileName: rec {
    name = "tracing-subscriber";
    version = "0.3.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "30a651bc37f915e81f087d86e62a18eec5f79550c7faff886f7090b4ea757c77";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["ansi"]
      ["default"]
      ["env-filter"]
      ["fmt"]
      ["json"]
      ["matchers"]
      ["nu-ansi-term"]
      ["once_cell"]
      ["regex"]
      ["registry"]
      ["serde"]
      ["serde_json"]
      ["sharded-slab"]
      ["smallvec"]
      ["std"]
      ["thread_local"]
      ["tracing"]
      ["tracing-log"]
      ["tracing-serde"]
    ];
    dependencies = {
      matchers = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" {inherit profileName;};
      nu_ansi_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.9.5" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
      serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.105" {inherit profileName;};
      sharded_slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.4" {inherit profileName;};
      smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.11.0" {inherit profileName;};
      thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" {inherit profileName;};
      tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.37" {inherit profileName;};
      tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.31" {inherit profileName;};
      tracing_log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.1.3" {inherit profileName;};
      tracing_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-serde."0.1.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "try-lock";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "3528ecfd12c466c6f163363caf2d02a71161dd5e1cc6ae7b34207ea2d42d81ed";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".typenum."1.16.0" = overridableMkRustCrate (profileName: rec {
    name = "typenum";
    version = "1.16.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "497961ef93d974e23eb6f433eb5fe1b7930b659f06d12dec6fc44a8f554c0bba";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.13" = overridableMkRustCrate (profileName: rec {
    name = "unicode-bidi";
    version = "0.3.13";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "92888ba5573ff080736b3648696b70cafad7d250551175acbaa4e0385b3e1460";
    };
    features = builtins.concatLists [
      ["default"]
      ["hardcoded-data"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.11" = overridableMkRustCrate (profileName: rec {
    name = "unicode-ident";
    version = "1.0.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "301abaae475aa91687eb82514b328ab47a211a533026cb25fc3e519b86adfc3c";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.22" = overridableMkRustCrate (profileName: rec {
    name = "unicode-normalization";
    version = "0.1.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
    dependencies = {
      tinyvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."1.6.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.10.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode-segmentation";
    version = "1.10.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.10" = overridableMkRustCrate (profileName: rec {
    name = "unicode-width";
    version = "0.1.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "unicode-xid";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f962df74c8c05a667b5ee8bcf162993134c104e96440b663c8daa176dc772d8c";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "unicode_categories";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".unsafe-libyaml."0.2.9" = overridableMkRustCrate (profileName: rec {
    name = "unsafe-libyaml";
    version = "0.2.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "f28467d3e1d3c6586d8f25fa243f544f5800fec42d97032474e17222c2b75cfa";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "untrusted";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".url."2.4.1" = overridableMkRustCrate (profileName: rec {
    name = "url";
    version = "2.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "143b538f18257fac9cad154828a57c6bf5157e1aa604d4816b5995bf6de87ae5";
    };
    features = builtins.concatLists [
      ["default"]
    ];
    dependencies = {
      form_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.0" {inherit profileName;};
      idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.4.0" {inherit profileName;};
      percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" = overridableMkRustCrate (profileName: rec {
    name = "urlencoding";
    version = "2.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "utf8parse";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a";
    };
    features = builtins.concatLists [
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".uuid."1.4.1" = overridableMkRustCrate (profileName: rec {
    name = "uuid";
    version = "1.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "79daa5ed5740825c40b389c5e50312b9c86df53fccd33f281df655642b43869d";
    };
    features = builtins.concatLists [
      ["default"]
      ["getrandom"]
      ["rng"]
      ["serde"]
      ["std"]
      ["v4"]
    ];
    dependencies = {
      getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.10" {inherit profileName;};
      serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.188" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "valuable";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.15" = overridableMkRustCrate (profileName: rec {
    name = "vcpkg";
    version = "0.2.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" = overridableMkRustCrate (profileName: rec {
    name = "version_check";
    version = "0.9.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".vsimd."0.8.0" = overridableMkRustCrate (profileName: rec {
    name = "vsimd";
    version = "0.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5c3082ca00d5a5ef149bb8b555a72ae84c9c59f7250f013ac822ac2e49b19c64";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["detect"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.4.0" = overridableMkRustCrate (profileName: rec {
    name = "walkdir";
    version = "2.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee";
    };
    dependencies = {
      same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" {inherit profileName;};
      ${
        if hostPlatform.isWindows
        then "winapi_util"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".want."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "want";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e";
    };
    dependencies = {
      try_lock = rustPackages."registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.11.0+wasi-snapshot-preview1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen";
    version = "0.2.87";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7706a72ab36d8cb1f80ffbf0e071533974a60d0a308d01a5d0375bf60499a342";
    };
    features = builtins.concatLists [
      ["default"]
      ["spans"]
      ["std"]
    ];
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      wasm_bindgen_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.87" {profileName = "__noProfile";};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.87" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-backend";
    version = "0.2.87";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5ef2b6d3c510e9625e5fe6f509ab07d66a760f0885d858736483c32ed7809abd";
    };
    features = builtins.concatLists [
      ["spans"]
    ];
    dependencies = {
      bumpalo = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.13.0" {inherit profileName;};
      log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" {inherit profileName;};
      once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.18.0" {inherit profileName;};
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
      wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.87" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.37" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-futures";
    version = "0.4.37";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c02dbc21516f9f1f04f187958890d7e6026df8d16540b7ad9492bc34a67cea03";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" {inherit profileName;};
      wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
      ${
        if builtins.elem "atomics" hostPlatformFeatures
        then "web_sys"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.64" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.87" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-macro";
    version = "0.2.87";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dee495e55982a3bd48105a7b947fd2a9b4a8ae3010041b9e0faab3f9cd028f1d";
    };
    features = builtins.concatLists [
      ["spans"]
    ];
    dependencies = {
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      wasm_bindgen_macro_support = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.87" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.87" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-macro-support";
    version = "0.2.87";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "54681b18a46765f095758388f2d0cf16eb8d4169b639ab575a8f5693af210c7b";
    };
    features = builtins.concatLists [
      ["spans"]
    ];
    dependencies = {
      proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.66" {inherit profileName;};
      quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.33" {inherit profileName;};
      syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.31" {inherit profileName;};
      wasm_bindgen_backend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.87" {inherit profileName;};
      wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.87" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.87" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-shared";
    version = "0.2.87";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ca6ad05a4870b2bf5fe995117d3728437bd27d7cd5f06f13c17443ef369775a1";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-streams."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "wasm-streams";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b4609d447824375f43e1ffbc051b50ad8f4b3ae8219680c94452ea05eb240ac7";
    };
    dependencies = {
      futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.28" {inherit profileName;};
      js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" {inherit profileName;};
      wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
      wasm_bindgen_futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.37" {inherit profileName;};
      web_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.64" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.64" = overridableMkRustCrate (profileName: rec {
    name = "web-sys";
    version = "0.3.64";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9b85cbef8c220a6abc02aefd892dfc0fc23afb1c6a426316ec33253a3877249b";
    };
    features = builtins.concatLists [
      ["AbortController"]
      ["AbortSignal"]
      ["Blob"]
      ["BlobPropertyBag"]
      ["Crypto"]
      ["Event"]
      ["EventTarget"]
      ["File"]
      ["FormData"]
      ["Headers"]
      ["MessageEvent"]
      ["ReadableStream"]
      ["Request"]
      ["RequestCredentials"]
      ["RequestInit"]
      ["RequestMode"]
      ["Response"]
      ["ServiceWorkerGlobalScope"]
      ["Window"]
      ["Worker"]
      ["WorkerGlobalScope"]
    ];
    dependencies = {
      js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.64" {inherit profileName;};
      wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.87" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.24.0" = overridableMkRustCrate (profileName: rec {
    name = "webpki-roots";
    version = "0.24.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "b291546d5d9d1eab74f069c77749f2cb8504a12caa20f0f2de93ddbf6f411888";
    };
    dependencies = {
      webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls-webpki."0.101.4" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.25.2" = overridableMkRustCrate (profileName: rec {
    name = "webpki-roots";
    version = "0.25.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "14247bb57be4f377dfb94c72830b8ce8fc6beac03cf4bf7b9732eadd414123fc";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".whoami."1.4.1" = overridableMkRustCrate (profileName: rec {
    name = "whoami";
    version = "1.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "22fc3756b8a9133049b26c7f61ab35416c130e8c09b660f5b3958b446f52cc50";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wildmatch."2.1.1" = overridableMkRustCrate (profileName: rec {
    name = "wildmatch";
    version = "2.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ee583bdc5ff1cf9db20e9db5bb3ff4c3089a8f6b8b31aff265c9aba85812db86";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
    name = "winapi";
    version = "0.3.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419";
    };
    features = builtins.concatLists [
      ["consoleapi"]
      ["errhandlingapi"]
      ["fileapi"]
      ["handleapi"]
      ["minwindef"]
      ["ntsecapi"]
      ["processenv"]
      ["std"]
      ["winbase"]
      ["wincon"]
      ["winerror"]
      ["winnt"]
      ["ws2ipdef"]
      ["ws2tcpip"]
      ["wtypesbase"]
    ];
    dependencies = {
      ${
        if hostPlatform.config == "i686-pc-windows-gnu"
        then "winapi_i686_pc_windows_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" {inherit profileName;};
      ${
        if hostPlatform.config == "x86_64-pc-windows-gnu"
        then "winapi_x86_64_pc_windows_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "winapi-util";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178";
    };
    dependencies = {
      ${
        if hostPlatform.isWindows
        then "winapi"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows."0.48.0" = overridableMkRustCrate (profileName: rec {
    name = "windows";
    version = "0.48.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e686886bc078bc1b0b600cac0147aadb815089b6e4da64016cbd754b6342700f";
    };
    features = builtins.concatLists [
      ["Globalization"]
      ["default"]
    ];
    dependencies = {
      windows_targets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.45.0" = overridableMkRustCrate (profileName: rec {
    name = "windows-sys";
    version = "0.45.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0";
    };
    features = builtins.concatLists [
      ["Win32"]
      ["Win32_Foundation"]
      ["Win32_Storage"]
      ["Win32_Storage_FileSystem"]
      ["Win32_System"]
      ["Win32_System_Console"]
      ["Win32_UI"]
      ["Win32_UI_Input"]
      ["Win32_UI_Input_KeyboardAndMouse"]
      ["default"]
    ];
    dependencies = {
      windows_targets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.42.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" = overridableMkRustCrate (profileName: rec {
    name = "windows-sys";
    version = "0.48.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9";
    };
    features = builtins.concatLists [
      ["Win32"]
      ["Win32_Foundation"]
      ["Win32_NetworkManagement"]
      ["Win32_NetworkManagement_IpHelper"]
      ["Win32_Networking"]
      ["Win32_Networking_WinSock"]
      ["Win32_Security"]
      ["Win32_Security_Authentication"]
      ["Win32_Security_Authentication_Identity"]
      ["Win32_Security_Credentials"]
      ["Win32_Security_Cryptography"]
      ["Win32_Storage"]
      ["Win32_Storage_FileSystem"]
      ["Win32_System"]
      ["Win32_System_Console"]
      ["Win32_System_Diagnostics"]
      ["Win32_System_Diagnostics_Debug"]
      ["Win32_System_IO"]
      ["Win32_System_Memory"]
      ["Win32_System_Pipes"]
      ["Win32_System_Registry"]
      ["Win32_System_SystemServices"]
      ["Win32_System_Threading"]
      ["Win32_System_Time"]
      ["Win32_System_WindowsProgramming"]
      ["Win32_UI"]
      ["Win32_UI_Shell"]
      ["default"]
    ];
    dependencies = {
      windows_targets = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows-targets";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8e5180c00cd44c9b1c88adb3693291f1cd93605ded80c250a75d472756b4d071";
    };
    dependencies = {
      ${
        if hostPlatform.config == "aarch64-pc-windows-gnullvm"
        then "windows_aarch64_gnullvm"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.2" {inherit profileName;};
      ${
        if hostPlatform.config == "aarch64-pc-windows-msvc" || hostPlatform.config == "aarch64-uwp-windows-msvc"
        then "windows_aarch64_msvc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.2" {inherit profileName;};
      ${
        if hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-uwp-windows-gnu"
        then "windows_i686_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.2" {inherit profileName;};
      ${
        if hostPlatform.config == "i686-pc-windows-msvc" || hostPlatform.config == "i686-uwp-windows-msvc"
        then "windows_i686_msvc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.2" {inherit profileName;};
      ${
        if hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-uwp-windows-gnu"
        then "windows_x86_64_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.2" {inherit profileName;};
      ${
        if hostPlatform.config == "x86_64-pc-windows-gnullvm"
        then "windows_x86_64_gnullvm"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.2" {inherit profileName;};
      ${
        if hostPlatform.config == "x86_64-pc-windows-msvc" || hostPlatform.config == "x86_64-uwp-windows-msvc"
        then "windows_x86_64_msvc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.2" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows-targets";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c";
    };
    dependencies = {
      ${
        if hostPlatform.config == "aarch64-pc-windows-gnullvm"
        then "windows_aarch64_gnullvm"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc"
        then "windows_aarch64_msvc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu"
        then "windows_i686_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc"
        then "windows_i686_msvc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu"
        then "windows_x86_64_gnu"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" {inherit profileName;};
      ${
        if hostPlatform.config == "x86_64-pc-windows-gnullvm"
        then "windows_x86_64_gnullvm"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" {inherit profileName;};
      ${
        if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "msvc"
        then "windows_x86_64_msvc"
        else null
      } =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_gnullvm";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_gnullvm";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_msvc";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "e08e8864a60f06ef0d0ff4ba04124db8b0fb3be5776a5cd47641e942e58c4d43";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_msvc";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_gnu";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "c61d927d8da41da96a81f029489353e68739737d3beca43145c8afec9a31a84f";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_gnu";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_msvc";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "44d840b6ec649f480a41c8d80f9c65108b92d89345dd94027bfe06ac444d1060";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_msvc";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnu";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "8de912b8b8feb55c064867cf047dda097f92d51efad5b491dfb98f6bbb70cb36";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnu";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnullvm";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "26d41b46a36d453748aedef1486d5c7a85db22e56aff34643984ea85514e94a3";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnullvm";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.42.2" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_msvc";
    version = "0.42.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "9aec5da331524158c6d1a4ac0ab1541149c0b9505fde06423b02f5ef0106b9f0";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_msvc";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winnow."0.5.15" = overridableMkRustCrate (profileName: rec {
    name = "winnow";
    version = "0.5.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "7c2e3184b9c4e92ad5167ca73039d0c42476302ab603e2fec4487511f38ccefc";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
      ["std"]
    ];
    dependencies = {
      memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.6.3" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".winreg."0.50.0" = overridableMkRustCrate (profileName: rec {
    name = "winreg";
    version = "0.50.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1";
    };
    dependencies = {
      cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {inherit profileName;};
      windows_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".wyz."0.5.1" = overridableMkRustCrate (profileName: rec {
    name = "wyz";
    version = "0.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed";
    };
    dependencies = {
      tap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".xdg."2.5.2" = overridableMkRustCrate (profileName: rec {
    name = "xdg";
    version = "2.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "213b7324336b53d2414b2db8537e56544d981803139155afa84f76eeebb7a546";
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".xmlparser."0.13.5" = overridableMkRustCrate (profileName: rec {
    name = "xmlparser";
    version = "0.13.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "4d25c75bf9ea12c4040a97f829154768bbbce366287e2dc044af160cd79a13fd";
    };
    features = builtins.concatLists [
      ["default"]
      ["std"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".xz2."0.1.7" = overridableMkRustCrate (profileName: rec {
    name = "xz2";
    version = "0.1.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "388c44dc09d76f1536602ead6d325eb532f5c122f17782bd57fb47baeeb767e2";
    };
    dependencies = {
      lzma_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lzma-sys."0.1.20" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".zeroize."1.6.0" = overridableMkRustCrate (profileName: rec {
    name = "zeroize";
    version = "1.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "2a0956f1ba7c7909bfb66c2e9e4124ab6f6482560f6628b5aaeba39207c9aad9";
    };
    features = builtins.concatLists [
      ["alloc"]
      ["default"]
    ];
  });

  "registry+https://github.com/rust-lang/crates.io-index".zstd."0.12.4" = overridableMkRustCrate (profileName: rec {
    name = "zstd";
    version = "0.12.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "1a27595e173641171fc74a1232b7b1c7a7cb6e18222c11e9dfb9888fa424c53c";
    };
    dependencies = {
      zstd_safe = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd-safe."6.0.6" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".zstd-safe."6.0.6" = overridableMkRustCrate (profileName: rec {
    name = "zstd-safe";
    version = "6.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "ee98ffd0b48ee95e6c5168188e44a54550b1564d9d530ee21d5f0eaed1069581";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
      zstd_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".zstd-sys."2.0.8+zstd.1.5.5" {inherit profileName;};
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".zstd-sys."2.0.8+zstd.1.5.5" = overridableMkRustCrate (profileName: rec {
    name = "zstd-sys";
    version = "2.0.8+zstd.1.5.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo {
      inherit name version;
      sha256 = "5556e6ee25d32df2586c098bbfa278803692a20d0ab9565e049480d52707ec8c";
    };
    features = builtins.concatLists [
      ["std"]
    ];
    dependencies = {
      libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.147" {inherit profileName;};
    };
    buildDependencies = {
      cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" {profileName = "__noProfile";};
      pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.27" {profileName = "__noProfile";};
    };
  });
}
